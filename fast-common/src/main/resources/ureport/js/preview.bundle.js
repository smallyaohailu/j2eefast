/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./src/MsgBox.js":
/*!***********************!*\
  !*** ./src/MsgBox.js ***!
  \***********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"alert\": () => (/* binding */ alert),\n/* harmony export */   \"confirm\": () => (/* binding */ confirm),\n/* harmony export */   \"dialog\": () => (/* binding */ dialog),\n/* harmony export */   \"showDialog\": () => (/* binding */ showDialog),\n/* harmony export */   \"tip\": () => (/* binding */ tip)\n/* harmony export */ });\n/**\n * Created by jacky on 2016/7/9.\n */\nfunction alert(msg) {\n    const dialog = buildDialog('消息提示', msg);\n    dialog.modal('show');\n};\n\nfunction tip(title, msg) {\n    const dialog = buildDialog(title, msg);\n    dialog.modal('show');\n};\n\nfunction confirm(msg, callback) {\n    const dialog = buildDialog('确认提示', msg, [{\n        name: '确认',\n        click: function () {\n            callback.call(this);\n        }\n    }]);\n    dialog.modal('show');\n};\n\nfunction dialog(title, content, callback) {\n    const dialog = buildDialog(title, content, [{\n        name: '确认',\n        click: function () {\n            callback.call(this);\n        }\n    }]);\n    dialog.modal('show');\n};\n\nfunction showDialog(title, dialogContent, buttons, events, large) {\n    const dialog = buildDialog(title, dialogContent, buttons, large);\n    dialog.modal('show');\n    if (events) {\n        for (let event of events) {\n            dialog.on(event.name, event.callback);\n        }\n    }\n};\n\nfunction buildDialog(title, dialogContent, buttons, large) {\n    const className = 'modal-dialog' + (large ? ' modal-lg' : '');\n    let modal = $(`<div class=\"modal fade\" tabindex=\"-1\" role=\"dialog\" aria-hidden=\"true\"></div>`);\n    let dialog = $(`<div class=\"${className}\"></div>`);\n    modal.append(dialog);\n    let content = $(`<div class=\"modal-content\">\n         <div class=\"modal-header\">\n            <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-hidden=\"true\">\n               &times;\n            </button>\n            <h4 class=\"modal-title\">\n               ${title}\n            </h4>\n         </div>\n         <div class=\"modal-body\">\n            ${typeof dialogContent === 'string' ? dialogContent : ''}\n         </div>`);\n    if (typeof dialogContent === 'object') {\n        content.find('.modal-body').append(dialogContent);\n    }\n    dialog.append(content);\n    let footer = $(`<div class=\"modal-footer\"></div>`);\n    content.append(footer);\n    if (buttons) {\n        buttons.forEach((btn, index) => {\n            let button = $(`<button type=\"button\" class=\"btn btn-default\">${btn.name}</button>`);\n            button.click(function (e) {\n                btn.click.call(this);\n                if (!btn.holdDialog) {\n                    modal.modal('hide');\n                }\n            }.bind(this));\n            footer.append(button);\n        });\n    } else {\n        let okBtn = $(`<button type=\"button\" class=\"btn btn-default\" data-dismiss=\"modal\">确定</button>`);\n        footer.append(okBtn);\n    }\n\n    modal.on(\"show.bs.modal\", function () {\n        var index = 1050;\n        $(document).find('.modal').each(function (i, d) {\n            var zIndex = $(d).css('z-index');\n            if (zIndex && zIndex !== '' && !isNaN(zIndex)) {\n                zIndex = parseInt(zIndex);\n                if (zIndex > index) {\n                    index = zIndex;\n                }\n            }\n        });\n        index++;\n        modal.css({ 'z-index': index });\n    });\n    return modal;\n};\n\n//# sourceURL=webpack://ureport2-js/./src/MsgBox.js?");

/***/ }),

/***/ "./src/Utils.js":
/*!**********************!*\
  !*** ./src/Utils.js ***!
  \**********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"buildNewCellDef\": () => (/* binding */ buildNewCellDef),\n/* harmony export */   \"buildPageSizeList\": () => (/* binding */ buildPageSizeList),\n/* harmony export */   \"encode\": () => (/* binding */ encode),\n/* harmony export */   \"formatDate\": () => (/* binding */ formatDate),\n/* harmony export */   \"getParameter\": () => (/* binding */ getParameter),\n/* harmony export */   \"hideLoading\": () => (/* binding */ hideLoading),\n/* harmony export */   \"hideTip\": () => (/* binding */ hideTip),\n/* harmony export */   \"mmToPoint\": () => (/* binding */ mmToPoint),\n/* harmony export */   \"pixelToPoint\": () => (/* binding */ pixelToPoint),\n/* harmony export */   \"pointToMM\": () => (/* binding */ pointToMM),\n/* harmony export */   \"pointToPixel\": () => (/* binding */ pointToPixel),\n/* harmony export */   \"resetDirty\": () => (/* binding */ resetDirty),\n/* harmony export */   \"resetTableData\": () => (/* binding */ resetTableData),\n/* harmony export */   \"setDirty\": () => (/* binding */ setDirty),\n/* harmony export */   \"showLoading\": () => (/* binding */ showLoading),\n/* harmony export */   \"showTip\": () => (/* binding */ showTip),\n/* harmony export */   \"tableToXml\": () => (/* binding */ tableToXml),\n/* harmony export */   \"undoManager\": () => (/* binding */ undoManager)\n/* harmony export */ });\n/* harmony import */ var undo_manager__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! undo-manager */ \"./node_modules/undo-manager/lib/undomanager.js\");\n/* harmony import */ var undo_manager__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(undo_manager__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _MsgBox_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./MsgBox.js */ \"./src/MsgBox.js\");\n/**\n * Created by Jacky.gao on 2016/7/27.\n */\n\n\n\nfunction showTip(text) {\n    $(window).block({ message: '<div class=\"loaderbox\"><div class=\"loading-circle\"></div>' + text + '</div>' });\n}\n\nfunction hideTip() {\n    $(window).unblock();\n}\n\nfunction showLoading() {\n    const url = window._server + '/res/ureport-asserts/icons/loading.gif';\n    const h = $(window).height() / 2,\n          w = $(window).width() / 2;\n    const cover = $(`<div class=\"ureport-loading-cover\" style=\"position: absolute;left: 0px;top: 0px;width:${w * 2}px;height:${h * 2}px;z-index: 1199;background:rgba(222,222,222,.5)\"></div>`);\n    $(document.body).append(cover);\n    const loading = $(`<div class=\"ureport-loading\" style=\"text-align: center;position: absolute;z-index: 1120;left: ${w - 35}px;top: ${h - 35}px;\"><img src=\"${url}\">\n    <div style=\"margin-top: 5px\">打印数据加载中...</div></div>`);\n    $(document.body).append(loading);\n};\n\nfunction hideLoading() {\n    $('.ureport-loading-cover').remove();\n    $('.ureport-loading').remove();\n};\n\nfunction resetTableData(hot) {\n    const countCols = hot.countCols(),\n          countRows = hot.countRows(),\n          context = hot.context,\n          data = [];\n    for (let i = 0; i < countRows; i++) {\n        let rowData = [];\n        for (let j = 0; j < countCols; j++) {\n            let td = hot.getCell(i, j);\n            if (!td) {\n                rowData.push(\"\");\n                continue;\n            }\n            let cellDef = context.getCell(i, j);\n            if (cellDef) {\n                let valueType = cellDef.value.type,\n                    value = cellDef.value;\n                if (valueType === 'dataset') {\n                    let text = value.datasetName + \".\" + value.aggregate + \"(\";\n                    let prop = value.property;\n                    if (prop.length > 13) {\n                        text += prop.substring(0, 10) + '..)';\n                    } else {\n                        text += prop + \")\";\n                    }\n                    rowData.push(text);\n                } else if (valueType === 'expression') {\n                    let v = value.value || '';\n                    if (v.length > 16) {\n                        v = v.substring(0, 13) + '...';\n                    }\n                    rowData.push(v);\n                } else {\n                    rowData.push(value.value || \"\");\n                }\n            } else {\n                rowData.push(\"\");\n            }\n        }\n        data.push(rowData);\n    }\n    hot.loadData(data);\n};\n\nfunction buildNewCellDef(rowNumber, columnNumber) {\n    let cellDef = { rowNumber, columnNumber, expand: 'None', cellStyle: { fontSize: 9, forecolor: '0,0,0', fontFamily: '宋体', align: 'center', valign: 'middle' }, value: { type: 'simple', value: '' } };\n    return cellDef;\n};\n\n/**\n * 对象转换XML\n * @param 对象数据 context \n * @returns \n */\nfunction tableToXml(context) {\n    const hot = context.hot;\n    const countRows = hot.countRows(),\n          countCols = hot.countCols();\n    let xml = `<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n    <ureport xmlns=\"http://www.j2eefast.com/JUUreport\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n        xsi:schemaLocation=\"http://www.j2eefast.com/JUUreport http://www.j2eefast.com/JUUreport \">`;\n    let config = '';\n    const $config = context.reportDef.config;\n    config += `<config>`;\n    config += `<name><![CDATA[${$config.name}]]></name>`;\n    config += `<downName><![CDATA[${$config.downName}]]></downName>`;\n    config += `<func><![CDATA[${$config.func}]]></func>`;\n    config += `<roleKeys><![CDATA[${$config.roleKeys}]]></roleKeys>`;\n    config += `<tableAlias><![CDATA[${$config.tableAlias}]]></tableAlias>`;\n    config += `<remark><![CDATA[${$config.remark}]]></remark>`;\n    config += `<version><![CDATA[${window._JU_VERSION_}]]></version>`;\n    config += `</config>`;\n    xml += config;\n\n    let rowsXml = '',\n        columnXml = '';\n    const rowHeaders = context.rowHeaders;\n    for (let i = 0; i < countRows; i++) {\n        let height = hot.getRowHeight(i) || 16;\n        height = pixelToPoint(height);\n        let band = null;\n        for (let header of rowHeaders) {\n            if (header.rowNumber === i) {\n                band = header.band;\n                break;\n            }\n        }\n        if (band) {\n            rowsXml += `<row row-number=\"${i + 1}\" height=\"${height}\" band=\"${band}\"/>`;\n        } else {\n            rowsXml += `<row row-number=\"${i + 1}\" height=\"${height}\"/>`;\n        }\n    }\n    for (let i = 0; i < countCols; i++) {\n        let width = hot.getColWidth(i) || 30;\n        width = pixelToPoint(width);\n        columnXml += `<column col-number=\"${i + 1}\" width=\"${width}\"/>`;\n    }\n    let cellXml = '',\n        spanData = [];\n    for (let i = 0; i < countRows; i++) {\n        for (let j = 0; j < countCols; j++) {\n            if (spanData.indexOf(i + \",\" + j) > -1) {\n                continue;\n            }\n            let cellDef = context.getCell(i, j);\n            if (!cellDef) {\n                continue;\n            }\n            let cellName = context.getCellName(i, j);\n            cellXml += `<cell expand=\"${cellDef.expand}\" name=\"${cellName}\" row=\"${i + 1}\" col=\"${j + 1}\"`;\n            if (cellDef.leftParentCellName && cellDef.leftParentCellName !== '') {\n                cellXml += ` left-cell=\"${cellDef.leftParentCellName}\"`;\n            }\n            if (cellDef.topParentCellName && cellDef.topParentCellName !== '') {\n                cellXml += ` top-cell=\"${cellDef.topParentCellName}\"`;\n            }\n            if (cellDef.fillBlankRows) {\n                cellXml += ` fill-blank-rows=\"${cellDef.fillBlankRows}\"`;\n                if (cellDef.multiple) {\n                    cellXml += ` multiple=\"${cellDef.multiple}\"`;\n                }\n            }\n\n            const span = getSpan(hot, i, j);\n            let rowSpan = span.rowspan,\n                colSpan = span.colspan;\n            let startRow = i,\n                endRow = i + rowSpan - 1,\n                startCol = j,\n                endCol = j + colSpan - 1;\n            for (let r = startRow; r <= endRow; r++) {\n                for (let c = startCol; c <= endCol; c++) {\n                    spanData.push(r + \",\" + c);\n                }\n            }\n            if (rowSpan > 1) {\n                cellXml += ` row-span=\"${rowSpan}\"`;\n            }\n            if (colSpan > 1) {\n                cellXml += ` col-span=\"${colSpan}\"`;\n            }\n\n            if (cellDef.linkUrl && cellDef.linkUrl !== '') {\n                cellXml += ` link-url=\"${cellDef.linkUrl}\"`;\n            }\n            if (cellDef.linkTargetWindow && cellDef.linkTargetWindow !== '') {\n                cellXml += ` link-target-window=\"${cellDef.linkTargetWindow}\"`;\n            }\n\n            cellXml += '>';\n            let cellStyle = cellDef.cellStyle;\n            cellXml += buildCellStyle(cellStyle);\n            if (cellDef.linkParameters && cellDef.linkParameters.length > 0) {\n                for (let param of cellDef.linkParameters) {\n                    cellXml += `<link-parameter name=\"${param.name}\">`;\n                    cellXml += `<value><![CDATA[${param.value}]]></value>`;\n                    cellXml += `</link-parameter>`;\n                }\n            }\n            const value = cellDef.value;\n            if (value.type === 'dataset') {\n                let msg = null;\n                if (!value.datasetName) {\n                    msg = `${cellName}单元格数据集属性不能为空！`;\n                }\n                if (!msg && !value.property) {\n                    msg = `${cellName}单元格属性不能为空！`;\n                }\n                if (!msg && !value.aggregate) {\n                    msg = `${cellName}单元格聚合方式属性不能为空！`;\n                }\n                if (msg) {\n                    (0,_MsgBox_js__WEBPACK_IMPORTED_MODULE_1__.alert)(msg);\n                    throw msg;\n                }\n                const mappingType = value.mappingType || 'simple';\n                cellXml += `<dataset-value dataset-name=\"${encode(value.datasetName)}\" aggregate=\"${value.aggregate}\" property=\"${value.property}\" order=\"${value.order}\" mapping-type=\"${mappingType}\"`;\n                if (mappingType === 'dataset') {\n                    cellXml += ` mapping-dataset=\"${value.mappingDataset}\" mapping-key-property=\"${value.mappingKeyProperty}\" mapping-value-property=\"${value.mappingValueProperty}\"`;\n                }\n                cellXml += '>';\n                cellXml += buildConditions(value.conditions);\n                if (value.aggregate === 'customgroup') {\n                    const groupItems = value.groupItems;\n                    for (let groupItem of groupItems) {\n                        cellXml += `<group-item name=\"${groupItem.name}\">`;\n                        for (let condition of groupItem.conditions) {\n                            cellXml += `<condition property=\"${condition.left}\" op=\"${encode(condition.operation || condition.op)}\" id=\"${condition.id}\"`;\n                            if (condition.join) {\n                                cellXml += ` join=\"${condition.join}\">`;\n                            } else {\n                                cellXml += `>`;\n                            }\n                            cellXml += `<value><![CDATA[${condition.right}]]></value>`;\n                            cellXml += `</condition>`;\n                        }\n                        cellXml += '</group-item>';\n                    }\n                }\n                if (mappingType === 'simple') {\n                    const mappingItems = value.mappingItems;\n                    if (mappingItems && mappingItems.length > 0) {\n                        for (let mappingItem of mappingItems) {\n                            cellXml += `<mapping-item value=\"${encode(mappingItem.value)}\" label=\"${encode(mappingItem.label)}\"/>`;\n                        }\n                    }\n                }\n                //系统字典\n                if (mappingType === 'dictType') {\n                    const dictType = value.dictType;\n                    if (dictType) {\n                        cellXml += `<mapping-dict value=\"${encode(dictType)}\"/>`;\n                    }\n                }\n                cellXml += `</dataset-value>`;\n            } else if (value.type === 'expression') {\n                if (!value.value || value.value === '') {\n                    const msg = `${cellName}单元格表达式不能为空`;\n                    (0,_MsgBox_js__WEBPACK_IMPORTED_MODULE_1__.alert)(msg);\n                    throw msg;\n                }\n                cellXml += `<expression-value>`;\n                cellXml += `<![CDATA[${value.value}]]>`;\n                cellXml += `</expression-value>`;\n            } else if (value.type === 'simple') {\n                cellXml += `<simple-value>`;\n                cellXml += `<![CDATA[${value.value || ''}]]>`;\n                cellXml += `</simple-value>`;\n            } else if (value.type === 'image') {\n                cellXml += `<image-value source=\"${value.source}\"`;\n                if (value.width) {\n                    cellXml += ` width=\"${value.width}\"`;\n                }\n                if (value.height) {\n                    cellXml += ` height=\"${value.height}\"`;\n                }\n                cellXml += `>`;\n                cellXml += `<text>`;\n                cellXml += `<![CDATA[${value.value}]]>`;\n                cellXml += `</text>`;\n                cellXml += `</image-value>`;\n            } else if (value.type === 'zxing') {\n                cellXml += `<zxing-value source=\"${value.source}\" category=\"${value.category}\" width=\"${value.width}\" height=\"${value.height}\"`;\n                if (value.format) {\n                    cellXml += ` format=\"${value.format}\"`;\n                }\n                if (value.codeDisplay) {\n                    cellXml += ` code-display=\"${value.codeDisplay}\"`;\n                }\n                cellXml += `>`;\n                cellXml += `<text>`;\n                cellXml += `<![CDATA[${value.value}]]>`;\n                cellXml += `</text>`;\n                cellXml += `</zxing-value>`;\n            } else if (value.type === 'slash') {\n                cellXml += `<slash-value>`;\n                const slashes = value.slashes;\n                for (let slash of slashes) {\n                    cellXml += `<slash text=\"${slash.text}\" x=\"${slash.x}\" y=\"${slash.y}\" degree=\"${slash.degree}\"/>`;\n                }\n                cellXml += `<base64-data>`;\n                cellXml += `<![CDATA[${value.base64Data}]]>`;\n                cellXml += `</base64-data>`;\n                cellXml += `</slash-value>`;\n            } else if (value.type === 'echart') {\n                cellXml += `<echart-value>`;\n                const chart = value.eChart;\n                const dataset = chart.dataset;\n                cellXml += `<dataset dataset-type=\"${dataset.dataType || 'sql'}\" dataset-name=\"${dataset.datasetName}\" type=\"${dataset.type}\"`;\n                if (dataset.categoryProperty) {\n                    cellXml += ` category-property=\"${dataset.categoryProperty}\"`;\n                }\n                if (dataset.seriesProperty) {\n                    cellXml += ` series-property=\"${dataset.seriesProperty}\"`;\n                }\n                if (dataset.seriesType) {\n                    cellXml += ` series-type=\"${dataset.seriesType}\"`;\n                }\n                if (dataset.seriesText) {\n                    cellXml += ` series-text=\"${dataset.seriesText}\"`;\n                }\n                if (dataset.valueProperty) {\n                    cellXml += ` value-property=\"${dataset.valueProperty}\"`;\n                }\n                if (dataset.rProperty) {\n                    cellXml += ` r-property=\"${dataset.rProperty}\"`;\n                }\n                if (dataset.xProperty) {\n                    cellXml += ` x-property=\"${dataset.xProperty}\"`;\n                }\n                if (dataset.yProperty) {\n                    cellXml += ` y-property=\"${dataset.yProperty}\"`;\n                }\n                if (dataset.collectType) {\n                    cellXml += ` collect-type=\"${dataset.collectType}\"`;\n                }\n                if (dataset.apiUrl) {\n                    cellXml += ` api-url=\"${dataset.apiUrl}\"`;\n                }\n                cellXml += `/>`;\n                const xaxes = chart.xaxes;\n                if (xaxes) {\n                    cellXml += `<xaxes`;\n                    if (xaxes.rotation) {\n                        cellXml += ` rotation=\"${xaxes.rotation}\"`;\n                    }\n                    cellXml += `>`;\n                    const scaleLabel = xaxes.scaleLabel;\n                    if (scaleLabel) {\n                        cellXml += `<scale-label display=\"${scaleLabel.display}\"`;\n                        if (scaleLabel.labelString) {\n                            cellXml += ` label-string=\"${scaleLabel.labelString}\"`;\n                        }\n                        cellXml += `/>`;\n                    }\n                    cellXml += `</xaxes>`;\n                }\n                const yaxes = chart.yaxes;\n                if (yaxes) {\n                    cellXml += `<yaxes`;\n                    if (yaxes.rotation) {\n                        cellXml += ` rotation=\"${yaxes.rotation}\"`;\n                    }\n                    cellXml += `>`;\n                    const scaleLabel = yaxes.scaleLabel;\n                    if (scaleLabel) {\n                        cellXml += `<scale-label display=\"${scaleLabel.display}\"`;\n                        if (scaleLabel.labelString) {\n                            cellXml += ` label-string=\"${scaleLabel.labelString}\"`;\n                        }\n                        cellXml += `/>`;\n                    }\n                    cellXml += `</yaxes>`;\n                }\n\n                // let pie = false;\n                //图表配置\n                const options = chart.options;\n                if (options) {\n                    for (let option of options) {\n                        cellXml += `<option type=\"${option.type}\"`;\n                        if (option.position) {\n                            cellXml += ` position=\"${option.position}\"`;\n                        }\n                        if (option.backgroundColor) {\n                            cellXml += ` backgroundColor=\"${option.backgroundColor}\"`;\n                        }\n                        if (option.display !== undefined && option.display !== null) {\n                            cellXml += ` display=\"${option.display}\"`;\n                        }\n                        if (option.color) {\n                            cellXml += ` color=\"${option.color}\"`;\n                        }\n                        if (option.trigger) {\n                            cellXml += ` trigger=\"${option.trigger}\"`;\n                        }\n                        if (option.fontSize) {\n                            cellXml += ` fontSize=\"${option.fontSize}\"`;\n                        }\n                        if (option.text) {\n                            cellXml += ` text=\"${option.text}\"`;\n                        }\n                        if (option.left) {\n                            cellXml += ` left=\"${option.left}\"`;\n                        }\n                        if (option.top) {\n                            cellXml += ` top=\"${option.top}\"`;\n                        }\n                        if (option.orient) {\n                            cellXml += ` orient=\"${option.orient}\"`;\n                        }\n                        if (option.smooth) {\n                            cellXml += ` smooth=\"${option.smooth}\"`;\n                        }\n                        if ((dataset.type == 'pie_doughnut' || dataset.type == 'pie_roseType') && option.type == 'pie') {\n                            // pie = true;     \n                            cellXml += ` radius=\"${option.radius || \"['40%','60%']\"}\"`;\n                        }\n                        if (dataset.type == 'pie_simple' && option.type == 'pie') {\n                            // pie = true; \n                            cellXml += ` radius=\"${option.radius || '50%'}\"`;\n                        }\n                        cellXml += `/>`;\n                    }\n                }\n\n                // if(!pie && (dataset.type == 'pie_doughnut' ||\n                // dataset.type == 'pie_roseType' || dataset.type == 'pie_simple')){\n                //     cellXml+=`<option type=\"pie\"`;\n                //     if((dataset.type == 'pie_doughnut' ||\n                //              dataset.type == 'pie_roseType')){  \n                //             cellXml+=` radius=\"['40%','60%']\"`;\n                //         }\n                //     if(dataset.type == 'pie_simple'){\n                //         cellXml+=` radius=\"'50%'\"`;\n                //     }\n                //     cellXml+=`/>`;\n                // }\n\n                const plugins = chart.plugins || [];\n                for (let plugin of plugins) {\n                    cellXml += `<plugin name=\"${plugin.name}\" display=\"${plugin.display}\"/>`;\n                }\n                if (plugins) {}\n                cellXml += `</echart-value>`;\n            } else if (value.type === 'chart') {\n                cellXml += `<chart-value>`;\n                const chart = value.chart;\n                const dataset = chart.dataset;\n                cellXml += `<dataset dataset-name=\"${dataset.datasetName}\" type=\"${dataset.type}\"`;\n                if (dataset.categoryProperty) {\n                    cellXml += ` category-property=\"${dataset.categoryProperty}\"`;\n                }\n                if (dataset.seriesProperty) {\n                    cellXml += ` series-property=\"${dataset.seriesProperty}\"`;\n                }\n                if (dataset.seriesType) {\n                    cellXml += ` series-type=\"${dataset.seriesType}\"`;\n                }\n                if (dataset.seriesText) {\n                    cellXml += ` series-text=\"${dataset.seriesText}\"`;\n                }\n                if (dataset.valueProperty) {\n                    cellXml += ` value-property=\"${dataset.valueProperty}\"`;\n                }\n                if (dataset.rProperty) {\n                    cellXml += ` r-property=\"${dataset.rProperty}\"`;\n                }\n                if (dataset.xProperty) {\n                    cellXml += ` x-property=\"${dataset.xProperty}\"`;\n                }\n                if (dataset.yProperty) {\n                    cellXml += ` y-property=\"${dataset.yProperty}\"`;\n                }\n                if (dataset.collectType) {\n                    cellXml += ` collect-type=\"${dataset.collectType}\"`;\n                }\n                cellXml += `/>`;\n                const xaxes = chart.xaxes;\n                if (xaxes) {\n                    cellXml += `<xaxes`;\n                    if (xaxes.rotation) {\n                        cellXml += ` rotation=\"${xaxes.rotation}\"`;\n                    }\n                    cellXml += `>`;\n                    const scaleLabel = xaxes.scaleLabel;\n                    if (scaleLabel) {\n                        cellXml += `<scale-label display=\"${scaleLabel.display}\"`;\n                        if (scaleLabel.labelString) {\n                            cellXml += ` label-string=\"${scaleLabel.labelString}\"`;\n                        }\n                        cellXml += `/>`;\n                    }\n                    cellXml += `</xaxes>`;\n                }\n                const yaxes = chart.yaxes;\n                if (yaxes) {\n                    cellXml += `<yaxes`;\n                    if (yaxes.rotation) {\n                        cellXml += ` rotation=\"${yaxes.rotation}\"`;\n                    }\n                    cellXml += `>`;\n                    const scaleLabel = yaxes.scaleLabel;\n                    if (scaleLabel) {\n                        cellXml += `<scale-label display=\"${scaleLabel.display}\"`;\n                        if (scaleLabel.labelString) {\n                            cellXml += ` label-string=\"${scaleLabel.labelString}\"`;\n                        }\n                        cellXml += `/>`;\n                    }\n                    cellXml += `</yaxes>`;\n                }\n                const options = chart.options;\n                if (options) {\n                    for (let option of options) {\n                        cellXml += `<option type=\"${option.type}\"`;\n                        if (option.position) {\n                            cellXml += ` position=\"${option.position}\"`;\n                        }\n                        if (option.display !== undefined && option.display !== null) {\n                            cellXml += ` display=\"${option.display}\"`;\n                        }\n                        if (option.duration) {\n                            cellXml += ` duration=\"${option.duration}\"`;\n                        }\n                        if (option.easing) {\n                            cellXml += ` easing=\"${option.easing}\"`;\n                        }\n                        if (option.text) {\n                            cellXml += ` text=\"${option.text}\"`;\n                        }\n                        cellXml += `/>`;\n                    }\n                }\n                const plugins = chart.plugins || [];\n                for (let plugin of plugins) {\n                    cellXml += `<plugin name=\"${plugin.name}\" display=\"${plugin.display}\"/>`;\n                }\n                if (plugins) {}\n                cellXml += `</chart-value>`;\n            }\n            const propertyConditions = cellDef.conditionPropertyItems || [];\n            for (let pc of propertyConditions) {\n                cellXml += `<condition-property-item name=\"${pc.name}\"`;\n                const rowHeight = pc.rowHeight;\n                if (rowHeight !== null && rowHeight !== undefined && rowHeight !== -1) {\n                    cellXml += ` row-height=\"${rowHeight}\"`;\n                }\n                const colWidth = pc.colWidth;\n                if (colWidth !== null && colWidth !== undefined && colWidth !== -1) {\n                    cellXml += ` col-width=\"${colWidth}\"`;\n                }\n                if (pc.newValue && pc.newValue !== '') {\n                    cellXml += ` new-value=\"${pc.newValue}\"`;\n                }\n                if (pc.linkUrl && pc.linkUrl !== '') {\n                    cellXml += ` link-url=\"${pc.linkUrl}\"`;\n                    let targetWindow = pc.linkTargetWindow;\n                    if (!targetWindow || targetWindow === '') {\n                        targetWindow = \"_self\";\n                    }\n                    cellXml += ` link-target-window=\"${pc.linkTargetWindow}\"`;\n                }\n                cellXml += `>`;\n                const paging = pc.paging;\n                if (paging) {\n                    cellXml += `<paging position=\"${paging.position}\" line=\"${paging.line}\"/>`;\n                }\n                if (pc.linkParameters && pc.linkParameters.length > 0) {\n                    for (let param of pc.linkParameters) {\n                        cellXml += `<link-parameter name=\"${param.name}\">`;\n                        cellXml += `<value><![CDATA[${param.value}]]></value>`;\n                        cellXml += `</link-parameter>`;\n                    }\n                }\n                const style = pc.cellStyle;\n                if (style) {\n                    cellXml += buildCellStyle(style, true);\n                }\n                cellXml += buildConditions(pc.conditions);\n                cellXml += `</condition-property-item>`;\n            }\n            cellXml += '</cell>';\n        }\n    }\n    xml += cellXml;\n    xml += rowsXml;\n    xml += columnXml;\n    const header = context.reportDef.header;\n    if (header && (header.left || header.center || header.right)) {\n        xml += '<header ';\n        if (header.fontFamily) {\n            xml += ` font-family=\"${header.fontFamily}\"`;\n        }\n        if (header.fontSize) {\n            xml += ` font-size=\"${header.fontSize}\"`;\n        }\n        if (header.forecolor) {\n            xml += ` forecolor=\"${header.forecolor}\"`;\n        }\n        if (header.bold) {\n            xml += ` bold=\"${header.bold}\"`;\n        }\n        if (header.italic) {\n            xml += ` italic=\"${header.italic}\"`;\n        }\n        if (header.underline) {\n            xml += ` underline=\"${header.underline}\"`;\n        }\n        if (header.margin) {\n            xml += ` margin=\"${header.margin}\"`;\n        }\n        xml += '>';\n        if (header.left) {\n            xml += `<left><![CDATA[${header.left}]]></left>`;\n        }\n        if (header.center) {\n            xml += `<center><![CDATA[${header.center}]]></center>`;\n        }\n        if (header.right) {\n            xml += `<right><![CDATA[${header.right}]]></right>`;\n        }\n        xml += '</header>';\n    }\n    const footer = context.reportDef.footer;\n    if (footer && (footer.left || footer.center || footer.right)) {\n        xml += '<footer ';\n        if (footer.fontFamily) {\n            xml += ` font-family=\"${footer.fontFamily}\"`;\n        }\n        if (footer.fontSize) {\n            xml += ` font-size=\"${footer.fontSize}\"`;\n        }\n        if (footer.forecolor) {\n            xml += ` forecolor=\"${footer.forecolor}\"`;\n        }\n        if (footer.bold) {\n            xml += ` bold=\"${footer.bold}\"`;\n        }\n        if (footer.italic) {\n            xml += ` italic=\"${footer.italic}\"`;\n        }\n        if (footer.underline) {\n            xml += ` underline=\"${footer.underline}\"`;\n        }\n        if (footer.margin) {\n            xml += ` margin=\"${footer.margin}\"`;\n        }\n        xml += '>';\n        if (footer.left) {\n            xml += `<left><![CDATA[${footer.left}]]></left>`;\n        }\n        if (footer.center) {\n            xml += `<center><![CDATA[${footer.center}]]></center>`;\n        }\n        if (footer.right) {\n            xml += `<right><![CDATA[${footer.right}]]></right>`;\n        }\n        xml += '</footer>';\n    }\n    let datasourceXml = \"\";\n    const datasources = context.reportDef.datasources;\n    for (let datasource of datasources) {\n        let ds = `<datasource name=\"${encode(datasource.name)}\" type=\"${datasource.type}\"`;\n        let type = datasource.type;\n        if (type === 'jdbc') {\n            ds += ` username=\"${encode(datasource.username)}\"`;\n            ds += ` password=\"${encode(datasource.password)}\"`;\n            ds += ` url=\"${encode(datasource.url)}\"`;\n            ds += ` driver=\"${datasource.driver}\"`;\n            ds += '>';\n            for (let dataset of datasource.datasets) {\n                ds += `<dataset name=\"${encode(dataset.name)}\" type=\"sql\">`;\n                ds += `<sql><![CDATA[${dataset.sql}]]></sql>`;\n                for (let field of dataset.fields) {\n                    ds += `<field name=\"${field.name}\"/>`;\n                }\n                for (let parameter of dataset.parameters) {\n                    ds += `<parameter name=\"${encode(parameter.name)}\" type=\"${parameter.type}\" default-value=\"${encode(parameter.defaultValue)}\"/>`;\n                }\n                ds += `</dataset>`;\n            }\n        } else if (type === 'spring') {\n            ds += ` bean=\"${datasource.beanId}\">`;\n            for (let dataset of datasource.datasets) {\n                ds += `<dataset name=\"${encode(dataset.name)}\" type=\"bean\" method=\"${dataset.method}\" clazz=\"${dataset.clazz}\">`;\n                for (let field of dataset.fields) {\n                    ds += `<field name=\"${field.name}\"/>`;\n                }\n                ds += `</dataset>`;\n            }\n        } else if (type === 'buildin') {\n            //内置数据源\n            ds += '>';\n            for (let dataset of datasource.datasets) {\n                if (dataset.page != undefined && dataset.page && dataset.pageSize) {\n                    ds += `<dataset name=\"${encode(dataset.name)}\" type=\"sql\" ispage=\"true\" pagesize=\"${dataset.pageSize}\">`;\n                } else {\n                    ds += `<dataset name=\"${encode(dataset.name)}\" type=\"sql\" ispage=\"false\">`;\n                }\n                ds += `<sql><![CDATA[${dataset.sql}]]></sql>`;\n                for (let field of dataset.fields) {\n                    ds += `<field name=\"${field.name}\"/>`;\n                }\n                for (let parameter of dataset.parameters) {\n                    ds += `<parameter name=\"${parameter.name}\" type=\"${parameter.type}\" default-value=\"${parameter.defaultValue}\"/>`;\n                }\n                ds += `</dataset>`;\n            }\n        }\n        ds += \"</datasource>\";\n        datasourceXml += ds;\n    }\n    xml += datasourceXml;\n    const paper = context.reportDef.paper;\n    let htmlIntervalRefreshValue = 0;\n    if (paper.htmlIntervalRefreshValue !== null && paper.htmlIntervalRefreshValue !== undefined) {\n        htmlIntervalRefreshValue = paper.htmlIntervalRefreshValue;\n    }\n    xml += `<paper type=\"${paper.paperType}\" left-margin=\"${paper.leftMargin}\" right-margin=\"${paper.rightMargin}\"\n    top-margin=\"${paper.topMargin}\" bottom-margin=\"${paper.bottomMargin}\" paging-mode=\"${paper.pagingMode}\" fixrows=\"${paper.fixRows}\"\n    width=\"${paper.width}\" height=\"${paper.height}\" orientation=\"${paper.orientation}\" html-report-align=\"${paper.htmlReportAlign}\" bg-watermark=\"${paper.watermark || ''}\" bg-image=\"${paper.bgImage || ''}\" html-interval-refresh-value=\"${htmlIntervalRefreshValue}\" column-enabled=\"${paper.columnEnabled}\"`;\n    if (paper.columnEnabled) {\n        xml += ` column-count=\"${paper.columnCount}\" column-margin=\"${paper.columnMargin}\"`;\n    }\n    xml += `></paper>`;\n    if (context.reportDef.searchFormXml) {\n        xml += context.reportDef.searchFormXml;\n    }\n    xml += `</ureport>`;\n    console.log(\"xml:\", xml);\n    xml = encodeURIComponent(xml);\n    return xml;\n};\n\nfunction getSpan(hot, row, col) {\n    const mergeCells = hot.getSettings().mergeCells || [];\n    for (let item of mergeCells) {\n        if (item.row === row && item.col === col) {\n            return item;\n        }\n    }\n    return { rowspan: 0, colspan: 0 };\n}\n\nfunction buildConditions(conditions) {\n    let cellXml = '';\n    if (conditions) {\n        const size = conditions.length;\n        for (let condition of conditions) {\n            if (!condition.type || condition.type === 'property') {\n                if (condition.left) {\n                    cellXml += `<condition property=\"${condition.left}\" op=\"${encode(condition.operation)}\" id=\"${condition.id}\"`;\n                } else {\n                    cellXml += `<condition op=\"${encode(condition.operation)}\" id=\"${condition.id}\"`;\n                }\n                cellXml += ` type=\"${condition.type}\"`;\n                if (condition.join && size > 1) {\n                    cellXml += ` join=\"${condition.join}\">`;\n                } else {\n                    cellXml += `>`;\n                }\n                cellXml += `<value><![CDATA[${condition.right}]]></value>`;\n            } else {\n                if (!condition.operation && condition.op == 'Equals') {\n                    condition.operation = '==';\n                }\n                cellXml += `<condition type=\"${condition.type}\" op=\"${encode(condition.operation)}\" id=\"${condition.id}\"`;\n                if (condition.join && size > 1) {\n                    cellXml += ` join=\"${condition.join}\">`;\n                } else {\n                    cellXml += `>`;\n                }\n                cellXml += `<left><![CDATA[${condition.left}]]></left>`;\n                cellXml += `<right><![CDATA[${condition.right}]]></right>`;\n            }\n            cellXml += `</condition>`;\n        }\n    }\n    return cellXml;\n};\n\nfunction buildCellStyle(cellStyle, condition) {\n    let cellXml = \"<cell-style\";\n    if (condition) {\n        cellXml += ` for-condition=\"true\"`;\n    }\n    if (cellStyle.fontSize && cellStyle.fontSize !== '') {\n        cellXml += ` font-size=\"${cellStyle.fontSize}\"`;\n    }\n    if (cellStyle.fontSizeScope) {\n        cellXml += ` font-size-scope=\"${cellStyle.fontSizeScope}\"`;\n    }\n    if (cellStyle.forecolor && cellStyle.forecolor !== '') {\n        cellXml += ` forecolor=\"${cellStyle.forecolor}\"`;\n    }\n    if (cellStyle.forecolorScope) {\n        cellXml += ` forecolor-scope=\"${cellStyle.forecolorScope}\"`;\n    }\n    if (cellStyle.fontFamily) {\n        if (cellStyle.fontFamily === '0') {\n            cellXml += ` font-family=\"\"`;\n        } else {\n            cellXml += ` font-family=\"${cellStyle.fontFamily}\"`;\n        }\n    }\n    if (cellStyle.fontFamilyScope) {\n        cellXml += ` font-family-scope=\"${cellStyle.fontFamilyScope}\"`;\n    }\n    if (cellStyle.bgcolor && cellStyle.bgcolor !== '') {\n        cellXml += ` bgcolor=\"${cellStyle.bgcolor}\"`;\n    }\n    if (cellStyle.bgcolorScope) {\n        cellXml += ` bgcolor-scope=\"${cellStyle.bgcolorScope}\"`;\n    }\n    if (cellStyle.format && cellStyle.format !== '') {\n        cellXml += ` format=\"${cellStyle.format}\"`;\n    }\n    if (cellStyle.bold !== undefined && cellStyle.bold !== null) {\n        cellXml += ` bold=\"${cellStyle.bold}\"`;\n    }\n    if (cellStyle.wordWrap !== undefined && cellStyle.wordWrap !== null) {\n        cellXml += ` word-wrap=\"${cellStyle.wordWrap}\"`;\n    }\n    if (cellStyle.boldScope) {\n        cellXml += ` bold-scope=\"${cellStyle.boldScope}\"`;\n    }\n    if (cellStyle.italic !== undefined && cellStyle.italic !== null) {\n        cellXml += ` italic=\"${cellStyle.italic}\"`;\n    }\n    if (cellStyle.italicScope) {\n        cellXml += ` italic-scope=\"${cellStyle.italicScope}\"`;\n    }\n    if (cellStyle.underline !== undefined && cellStyle.underline !== null) {\n        cellXml += ` underline=\"${cellStyle.underline}\"`;\n    }\n    if (cellStyle.delline !== undefined && cellStyle.delline !== null) {\n        cellXml += ` delline=\"${cellStyle.delline}\"`;\n    }\n    if (cellStyle.underlineScope) {\n        cellXml += ` underline-scope=\"${cellStyle.underlineScope}\"`;\n    }\n    if (cellStyle.wrapCompute !== undefined && cellStyle.wrapCompute !== null) {\n        cellXml += ` wrap-compute=\"${cellStyle.wrapCompute}\"`;\n    }\n    if (cellStyle.align && cellStyle.align !== '') {\n        cellXml += ` align=\"${cellStyle.align}\"`;\n    }\n    if (cellStyle.alignScope) {\n        cellXml += ` align-scope=\"${cellStyle.alignScope}\"`;\n    }\n    if (cellStyle.valign && cellStyle.valign !== '') {\n        cellXml += ` valign=\"${cellStyle.valign}\"`;\n    }\n    if (cellStyle.valignScope) {\n        cellXml += ` valign-scope=\"${cellStyle.valignScope}\"`;\n    }\n    if (cellStyle.lineHeight) {\n        cellXml += ` line-height=\"${cellStyle.lineHeight}\"`;\n    }\n    //是否转义\n    if (cellStyle.htmlEscape !== undefined && cellStyle.htmlEscape !== null) {\n        cellXml += ` html-escape=\"${cellStyle.htmlEscape}\"`;\n    }\n    cellXml += '>';\n    let leftBorder = cellStyle.leftBorder;\n    if (leftBorder && leftBorder.style !== \"none\") {\n        cellXml += `<left-border width=\"${leftBorder.width}\" style=\"${leftBorder.style}\" color=\"${leftBorder.color}\"/>`;\n    }\n    let rightBorder = cellStyle.rightBorder;\n    if (rightBorder && rightBorder.style !== \"none\") {\n        cellXml += `<right-border width=\"${rightBorder.width}\" style=\"${rightBorder.style}\" color=\"${rightBorder.color}\"/>`;\n    }\n    let topBorder = cellStyle.topBorder;\n    if (topBorder && topBorder.style !== \"none\") {\n        cellXml += `<top-border width=\"${topBorder.width}\" style=\"${topBorder.style}\" color=\"${topBorder.color}\"/>`;\n    }\n    let bottomBorder = cellStyle.bottomBorder;\n    if (bottomBorder && bottomBorder.style !== \"none\") {\n        cellXml += `<bottom-border width=\"${bottomBorder.width}\" style=\"${bottomBorder.style}\" color=\"${bottomBorder.color}\"/>`;\n    }\n    cellXml += '</cell-style>';\n    return cellXml;\n};\n\nfunction encode(text) {\n    let result = text.replace(/[<>&\"]/g, function (c) {\n        return { '<': '&lt;', '>': '&gt;', '&': '&amp;', '\"': '&quot;' }[c];\n    });\n    return result;\n};\n\nfunction getParameter(name) {\n    var reg = new RegExp(\"(^|&)\" + name + \"=([^&]*)(&|$)\");\n    var r = window.location.search.substr(1).match(reg);\n    if (r != null) return r[2];\n    return null;\n};\n\nfunction mmToPoint(mm) {\n    let value = mm * 2.834646;\n    return Math.round(value);\n};\nfunction pointToMM(point) {\n    let value = point * 0.352778;\n    return Math.round(value);\n};\n\nfunction pointToPixel(point) {\n    const value = point * 1.33;\n    return Math.round(value);\n};\n\nfunction pixelToPoint(pixel) {\n    const value = pixel * 0.75;\n    return Math.round(value);\n};\n\nfunction setDirty() {\n    $('#__save_btn').removeClass('disabled');\n};\n\nfunction resetDirty() {\n    $('#__save_btn').addClass('disabled');\n};\n\nfunction formatDate(date, format) {\n    if (typeof date === 'number') {\n        date = new Date(date);\n    }\n    if (typeof date === 'string') {\n        return date;\n    }\n    var o = {\n        \"M+\": date.getMonth() + 1,\n        \"d+\": date.getDate(),\n        \"H+\": date.getHours(),\n        \"m+\": date.getMinutes(),\n        \"s+\": date.getSeconds()\n    };\n    if (/(y+)/.test(format)) format = format.replace(RegExp.$1, (date.getFullYear() + \"\").substr(4 - RegExp.$1.length));\n    for (var k in o) if (new RegExp(\"(\" + k + \")\").test(format)) format = format.replace(RegExp.$1, RegExp.$1.length == 1 ? o[k] : (\"00\" + o[k]).substr((\"\" + o[k]).length));\n    return format;\n};\n\nfunction buildPageSizeList() {\n    return {\n        A0: { width: 841, height: 1189 },\n        A1: { width: 594, height: 841 },\n        A2: { width: 420, height: 594 },\n        A3: { width: 297, height: 420 },\n        A4: { width: 210, height: 297 },\n        A5: { width: 148, height: 210 },\n        A6: { width: 105, height: 148 },\n        A7: { width: 74, height: 105 },\n        A8: { width: 52, height: 74 },\n        A9: { width: 37, height: 52 },\n        A10: { width: 26, height: 37 },\n        B0: { width: 1000, height: 1414 },\n        B1: { width: 707, height: 1000 },\n        B2: { width: 500, height: 707 },\n        B3: { width: 353, height: 500 },\n        B4: { width: 250, height: 353 },\n        B5: { width: 176, height: 250 },\n        B6: { width: 125, height: 176 },\n        B7: { width: 88, height: 125 },\n        B8: { width: 62, height: 88 },\n        B9: { width: 44, height: 62 },\n        B10: { width: 31, height: 44 }\n    };\n}\n\nconst undoManager = new (undo_manager__WEBPACK_IMPORTED_MODULE_0___default())();\n\n//# sourceURL=webpack://ureport2-js/./src/Utils.js?");

/***/ }),

/***/ "./src/dialog/PDFPrintDialog.js":
/*!**************************************!*\
  !*** ./src/dialog/PDFPrintDialog.js ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ PDFPrintDialog)\n/* harmony export */ });\n/* harmony import */ var _Utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Utils.js */ \"./src/Utils.js\");\n/* harmony import */ var _MsgBox_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../MsgBox.js */ \"./src/MsgBox.js\");\n/**\n * Created by Jacky.Gao on 2017-02-07.\n */\n\n\n\nclass PDFPrintDialog {\n    constructor() {\n        const w = $(window).width(),\n              h = $(window).height();\n        this.paperSizeList = (0,_Utils_js__WEBPACK_IMPORTED_MODULE_0__.buildPageSizeList)();\n        this.dialog = $(`<div class=\"modal fade\" role=\"dialog\" aria-hidden=\"true\" style=\"z-index: 1110\">\n            <div class=\"modal-dialog modal-lg\" style=\"width: 1250px;\">\n                <div class=\"modal-content\">\n                    <div class=\"modal-header\">\n                        <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-hidden=\"true\">\n                            &times;\n                        </button>\n                        <h4 class=\"modal-title\">\n                            ${window.i18n.pdfPrint.title}\n                        </h4>\n                    </div>\n                    <div class=\"modal-body\" style=\"padding-top:5px\"></div>\n                    <div class=\"modal-footer\">\n                    </div>\n                </div>\n            </div>\n        </div>`);\n        this.body = this.dialog.find('.modal-body');\n        const footer = this.dialog.find(\".modal-footer\");\n        this.initBody();\n    }\n    initBody() {\n        const toolbar = $(`<fieldset style=\"width: 100%;height: 60px;font-size: 12px;border: solid 1px #ddd;border-radius: 5px;padding: 1px 8px;\">\n        <legend style=\"font-size: 12px;width: 60px;border-bottom: none;margin-bottom: 0;\">${window.i18n.pdfPrint.setup}</legend>\n        </fieldset>`);\n        this.body.append(toolbar);\n        const pageTypeGroup = $(`<div class=\"form-group\" style=\"display: inline-block\"><label>${window.i18n.pdfPrint.paper}</label></div>`);\n        toolbar.append(pageTypeGroup);\n        this.pageSelect = $(`<select class=\"form-control\" style=\"display: inline-block;width: 68px;font-size: 12px;padding: 1px;height: 28px;\">\n            <option>A0</option>\n            <option>A1</option>\n            <option>A2</option>\n            <option>A3</option>\n            <option>A4</option>\n            <option>A5</option>\n            <option>A6</option>\n            <option>A7</option>\n            <option>A8</option>\n            <option>A9</option>\n            <option>A10</option>\n            <option>B0</option>\n            <option>B1</option>\n            <option>B2</option>\n            <option>B3</option>\n            <option>B4</option>\n            <option>B5</option>\n            <option>B6</option>\n            <option>B7</option>\n            <option>B8</option>\n            <option>B9</option>\n            <option>B10</option>\n            <option value=\"CUSTOM\">${window.i18n.pdfPrint.custom}</option>\n        </select>`);\n        pageTypeGroup.append(this.pageSelect);\n        const _this = this;\n        this.pageSelect.change(function () {\n            let value = $(this).val();\n            if (value === 'CUSTOM') {\n                _this.pageWidthEditor.prop('readonly', false);\n                _this.pageHeightEditor.prop('readonly', false);\n            } else {\n                _this.pageWidthEditor.prop('readonly', true);\n                _this.pageHeightEditor.prop('readonly', true);\n                let pageSize = _this.paperSizeList[value];\n                _this.pageWidthEditor.val(pageSize.width);\n                _this.pageHeightEditor.val(pageSize.height);\n                _this.paper.width = (0,_Utils_js__WEBPACK_IMPORTED_MODULE_0__.mmToPoint)(pageSize.width);\n                _this.paper.height = (0,_Utils_js__WEBPACK_IMPORTED_MODULE_0__.mmToPoint)(pageSize.height);\n            }\n            _this.paper.paperType = value;\n        });\n\n        const pageWidthGroup = $(`<div class=\"form-group\" style=\"display: inline-block;margin-left: 6px\"><span>${window.i18n.pdfPrint.width}</span></div>`);\n        toolbar.append(pageWidthGroup);\n        this.pageWidthEditor = $(`<input type=\"number\" class=\"form-control\" readonly style=\"display: inline-block;width: 40px;font-size: 12px;padding: 1px;height: 28px\">`);\n        pageWidthGroup.append(this.pageWidthEditor);\n        this.pageWidthEditor.change(function () {\n            let value = $(this).val();\n            if (!value || isNaN(value)) {\n                (0,_MsgBox_js__WEBPACK_IMPORTED_MODULE_1__.alert)(`${window.i18n.pdfPrint.numberTip}`);\n                return;\n            }\n            _this.paper.width = (0,_Utils_js__WEBPACK_IMPORTED_MODULE_0__.mmToPoint)(value);\n            _this.context.printLine.refresh();\n        });\n\n        const pageHeightGroup = $(`<div class=\"form-group\" style=\"display: inline-block;margin-left: 6px\"><span>${window.i18n.pdfPrint.height}</span></div>`);\n        toolbar.append(pageHeightGroup);\n        this.pageHeightEditor = $(`<input type=\"number\" class=\"form-control\" readonly style=\"display: inline-block;width: 40px;font-size: 12px;padding: 1px;height: 28px\">`);\n        pageHeightGroup.append(this.pageHeightEditor);\n        this.pageHeightEditor.change(function () {\n            let value = $(this).val();\n            if (!value || isNaN(value)) {\n                (0,_MsgBox_js__WEBPACK_IMPORTED_MODULE_1__.alert)(`${window.i18n.pdfPrint.numberTip}`);\n                return;\n            }\n            _this.paper.height = (0,_Utils_js__WEBPACK_IMPORTED_MODULE_0__.mmToPoint)(value);\n        });\n\n        const orientationGroup = $(`<div class=\"form-group\" style=\"display: inline-block;margin-left: 6px\"><label>${window.i18n.pdfPrint.orientation}</label></div>`);\n        toolbar.append(orientationGroup);\n        this.orientationSelect = $(`<select class=\"form-control\" style=\"display:inline-block;width: 60px;font-size: 12px;padding: 1px;height: 28px\">\n            <option value=\"portrait\">${window.i18n.pdfPrint.portrait}</option>\n            <option value=\"landscape\">${window.i18n.pdfPrint.landscape}</option>\n        </select>`);\n        orientationGroup.append(this.orientationSelect);\n        this.orientationSelect.change(function () {\n            let value = $(this).val();\n            _this.paper.orientation = value;\n        });\n\n        const marginGroup = $(`<div style=\"display: inline-block\"></div>`);\n        toolbar.append(marginGroup);\n\n        const leftMarginGroup = $(`<div class=\"form-group\" style=\"display: inline-block;margin-left:6px\"><label>${window.i18n.pdfPrint.leftMargin}</label></div>`);\n        marginGroup.append(leftMarginGroup);\n        this.leftMarginEditor = $(`<input type=\"number\" class=\"form-control\" style=\"display: inline-block;width: 40px;font-size: 12px;padding: 1px;height: 28px\">`);\n        leftMarginGroup.append(this.leftMarginEditor);\n        this.leftMarginEditor.change(function () {\n            let value = $(this).val();\n            if (!value || isNaN(value)) {\n                (0,_MsgBox_js__WEBPACK_IMPORTED_MODULE_1__.alert)(`${window.i18n.pdfPrint.numberTip}`);\n                return;\n            }\n            _this.paper.leftMargin = (0,_Utils_js__WEBPACK_IMPORTED_MODULE_0__.mmToPoint)(value);\n            _this.context.printLine.refresh();\n        });\n\n        const rightMarginGroup = $(`<div class=\"form-group\" style=\"display: inline-block;margin-top: 5px;margin-left: 6px\"\"><label>${window.i18n.pdfPrint.rightMargin}</label></div>`);\n        marginGroup.append(rightMarginGroup);\n        this.rightMarginEditor = $(`<input type=\"number\" class=\"form-control\" style=\"display: inline-block;width: 40px;font-size: 12px;padding: 1px;height: 28px\">`);\n        rightMarginGroup.append(this.rightMarginEditor);\n        this.rightMarginEditor.change(function () {\n            let value = $(this).val();\n            if (!value || isNaN(value)) {\n                (0,_MsgBox_js__WEBPACK_IMPORTED_MODULE_1__.alert)(`${window.i18n.pdfPrint.numberTip}`);\n                return;\n            }\n            _this.paper.rightMargin = (0,_Utils_js__WEBPACK_IMPORTED_MODULE_0__.mmToPoint)(value);\n            _this.context.printLine.refresh();\n        });\n\n        const topMarginGroup = $(`<div class=\"form-group\" style=\"display: inline-block;margin-left: 6px;\"><label>${window.i18n.pdfPrint.topMargin}</label></div>`);\n        marginGroup.append(topMarginGroup);\n        this.topMarginEditor = $(`<input type=\"number\" class=\"form-control\" style=\"display: inline-block;width: 40px;font-size: 12px;padding: 1px;height: 28px\">`);\n        topMarginGroup.append(this.topMarginEditor);\n        this.topMarginEditor.change(function () {\n            let value = $(this).val();\n            if (!value || isNaN(value)) {\n                (0,_MsgBox_js__WEBPACK_IMPORTED_MODULE_1__.alert)(`${window.i18n.pdfPrint.numberTip}`);\n                return;\n            }\n            _this.paper.topMargin = (0,_Utils_js__WEBPACK_IMPORTED_MODULE_0__.mmToPoint)(value);\n        });\n\n        const bottomMarginGroup = $(`<div class=\"form-group\" style=\"display: inline-block;margin-left: 6px\"\"><label>${window.i18n.pdfPrint.bottomMargin}</label></div>`);\n        marginGroup.append(bottomMarginGroup);\n        this.bottomMarginEditor = $(`<input type=\"number\" class=\"form-control\" style=\"display: inline-block;width: 40px;font-size: 12px;padding: 1px;height: 28px\">`);\n        bottomMarginGroup.append(this.bottomMarginEditor);\n        this.bottomMarginEditor.change(function () {\n            let value = $(this).val();\n            if (!value || isNaN(value)) {\n                (0,_MsgBox_js__WEBPACK_IMPORTED_MODULE_1__.alert)(`${window.i18n.pdfPrint.numberTip}`);\n                return;\n            }\n            _this.paper.bottomMargin = (0,_Utils_js__WEBPACK_IMPORTED_MODULE_0__.mmToPoint)(value);\n        });\n        const file = (0,_Utils_js__WEBPACK_IMPORTED_MODULE_0__.getParameter)('_u');\n        const urlParameters = window.location.search;\n        const button = $(`<button class=\"btn btn-primary\" style=\"padding-top:5px;height: 30px;margin-left: 10px;\">${window.i18n.pdfPrint.apply}</button>`);\n        toolbar.append(button);\n        let index = 0;\n        button.click(function () {\n            (0,_Utils_js__WEBPACK_IMPORTED_MODULE_0__.showLoading)();\n            const paperData = JSON.stringify(_this.paper);\n            $.ajax({\n                type: 'POST',\n                data: { _paper: paperData },\n                url: window._server + '/pdf/newPaging' + urlParameters,\n                success: function () {\n                    const newUrl = window._server + '/pdf/show' + urlParameters + '&_r=' + index++;\n                    _this.iFrame.prop('src', newUrl);\n                },\n                error: function () {\n                    (0,_Utils_js__WEBPACK_IMPORTED_MODULE_0__.hideLoading)();\n                    (0,_MsgBox_js__WEBPACK_IMPORTED_MODULE_1__.alert)(`${window.i18n.pdfPrint.fail}`);\n                }\n            });\n        });\n\n        const printButton = $(`<button class=\"btn btn-danger\" style=\"padding-top:5px;height: 30px;margin-left: 10px;\">${window.i18n.pdfPrint.print}</button>`);\n        toolbar.append(printButton);\n        printButton.click(function () {\n            window.frames['_iframe_for_pdf_print'].window.print();\n        });\n    }\n\n    initIFrame() {\n        if (this.iFrame) {\n            return;\n        }\n        const urlParameters = buildLocationSearchParameters();\n        const h = $(window).height();\n        const url = window._server + \"/pdf/show\" + urlParameters + \"&_p=1\";\n        this.iFrame = $(`<iframe name=\"_iframe_for_pdf_print\" style=\"width: 100%;height:${h}px;margin-top: 5px;border:solid 1px #c2c2c2\" frameborder=\"0\" src=\"${url}\"></iframe>`);\n        this.body.append(this.iFrame);\n        const iframe = this.iFrame.get(0);\n        const msie = window.navigator.appName.indexOf(\"Internet Explorer\");\n        const ie11 = !!window.MSInputMethodContext && !!document.documentMode;\n        if (msie === -1 && !ie11) {\n            (0,_Utils_js__WEBPACK_IMPORTED_MODULE_0__.showLoading)();\n        }\n        this.iFrame.on('load', function () {\n            (0,_Utils_js__WEBPACK_IMPORTED_MODULE_0__.hideLoading)();\n        });\n    }\n\n    show(paper) {\n        this.paper = paper;\n        this.pageSelect.val(this.paper.paperType);\n        this.pageWidthEditor.val((0,_Utils_js__WEBPACK_IMPORTED_MODULE_0__.pointToMM)(this.paper.width));\n        this.pageHeightEditor.val((0,_Utils_js__WEBPACK_IMPORTED_MODULE_0__.pointToMM)(this.paper.height));\n        this.pageSelect.trigger('change');\n        this.leftMarginEditor.val((0,_Utils_js__WEBPACK_IMPORTED_MODULE_0__.pointToMM)(this.paper.leftMargin));\n        this.rightMarginEditor.val((0,_Utils_js__WEBPACK_IMPORTED_MODULE_0__.pointToMM)(this.paper.rightMargin));\n        this.topMarginEditor.val((0,_Utils_js__WEBPACK_IMPORTED_MODULE_0__.pointToMM)(this.paper.topMargin));\n        this.bottomMarginEditor.val((0,_Utils_js__WEBPACK_IMPORTED_MODULE_0__.pointToMM)(this.paper.bottomMargin));\n        this.orientationSelect.val(this.paper.orientation);\n        this.dialog.modal('show');\n        this.initIFrame();\n    }\n};\n\n//# sourceURL=webpack://ureport2-js/./src/dialog/PDFPrintDialog.js?");

/***/ }),

/***/ "./src/preview.js":
/*!************************!*\
  !*** ./src/preview.js ***!
  \************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _Utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Utils.js */ \"./src/Utils.js\");\n/* harmony import */ var _MsgBox_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./MsgBox.js */ \"./src/MsgBox.js\");\n/* harmony import */ var _dialog_PDFPrintDialog_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./dialog/PDFPrintDialog.js */ \"./src/dialog/PDFPrintDialog.js\");\n/* harmony import */ var _i18n_preview_json__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./i18n/preview.json */ \"./src/i18n/preview.json\");\n/* harmony import */ var _i18n_preview_en_json__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./i18n/preview_en.json */ \"./src/i18n/preview_en.json\");\n/**\n * J2eeFAST 新增优化\n * Created by Jacky.Gao on 2017-03-17.\n */\n//import './form/external/bootstrap-datetimepicker.css';\n\n\n\n\n\n// (function($){\n//     $.fn.datetimepicker.dates['zh-CN'] = {\n//         days: [\"星期日\", \"星期一\", \"星期二\", \"星期三\", \"星期四\", \"星期五\", \"星期六\", \"星期日\"],\n//         daysShort: [\"周日\", \"周一\", \"周二\", \"周三\", \"周四\", \"周五\", \"周六\", \"周日\"],\n//         daysMin:  [\"日\", \"一\", \"二\", \"三\", \"四\", \"五\", \"六\", \"日\"],\n//         months: [\"一月\", \"二月\", \"三月\", \"四月\", \"五月\", \"六月\", \"七月\", \"八月\", \"九月\", \"十月\", \"十一月\", \"十二月\"],\n//         monthsShort: [\"一月\", \"二月\", \"三月\", \"四月\", \"五月\", \"六月\", \"七月\", \"八月\", \"九月\", \"十月\", \"十一月\", \"十二月\"],\n//         today: \"今天\",\n//         suffix: [],\n//         meridiem: [\"上午\", \"下午\"]\n//     };\n// }(jQuery));\n/*重写Jquery中的ajax 封装壳*/\n(function (window, $) {\n    //首先备份下jquery的ajax方法\n    var _ajax = $.ajax;\n    //重写jquery的ajax方法\n    $.ajax = function ($opt) {\n        //备份opt中error和success方法\n        var fn = {\n            beforeSend: function (XHR) {},\n            error: function (XMLHttpRequest, textStatus, errorThrown) {},\n            success: function (data, textStatus) {},\n            complete: function (XHR, TS) {}\n        };\n\n        if ($opt.beforeSend) {\n            fn.beforeSend = $opt.beforeSend;\n        }\n\n        if ($opt.error) {\n            fn.error = $opt.error;\n        } else {\n            fn.error = function (xhr) {\n                try {\n                    opt.error(JSON.parse(xhr.responseText).msg || xhr.responseText);\n                } catch (e) {\n                    console.error(xhr.responseText);\n                }\n                opt.modal.closeLoading();\n                return;\n            };\n        }\n\n        if ($opt.success) {\n            fn.success = $opt.success;\n        }\n        if ($opt.complete) {\n            fn.complete = $opt.complete;\n        }\n\n        //防CSRF攻击\n        if (window.__ISCSRF__ && String($opt.type).toUpperCase() === String('POST').toUpperCase()) {\n            if (!($opt.headers && $opt.headers[\"X-CSRF-Token\"])) {\n                $opt = $.extend($opt, { headers: {\n                        \"X-CSRF-Token\": $('meta[name=\"csrf-token\"]').attr(\"content\")\n                    } });\n            }\n        }\n\n        //扩展增强处理\n        var _opt = $.extend($opt, {\n            //全局允许跨域\n            xhrFields: {\n                withCredentials: true\n            },\n            error: function (XMLHttpRequest, textStatus, errorThrown) {\n                //错误方法增强处理\n                fn.error(XMLHttpRequest, textStatus, errorThrown);\n            },\n            success: function (data, textStatus) {\n                //成功回调方法增强处理\n                fn.success(data, textStatus);\n            },\n            beforeSend: function (XHR) {\n                //提交前回调方法\n                fn.beforeSend(XHR);\n            },\n            complete: function (XHR, TS) {\n                //请求完成后回调函数 (请求成功或失败之后均调用)。\n                fn.complete(XHR, TS);\n            }\n        });\n\n        if ($opt.xhrFields) {\n            _opt.xhrFields = $opt.xhrFields;\n        }\n\n        //调用native ajax 方法\n        return _ajax(_opt);\n    };\n})(window, jQuery);\n$(document).ready(function () {\n    let language = window.__LANG__ || window.navigator.language;\n    if (!language) {\n        language = 'zh_cn';\n    }\n    language = language.toLowerCase();\n    window.i18n = _i18n_preview_json__WEBPACK_IMPORTED_MODULE_3__;\n    if (language !== 'zh_cn') {\n        window.i18n = _i18n_preview_en_json__WEBPACK_IMPORTED_MODULE_4__;\n    }\n\n    //打印当前\n    $('.ureport-print').click(function () {\n        let urlParameters = buildLocationSearchParameters();\n        urlParameters += \"&__a=0\";\n        const url = window._server + '/preview/loadPrintPages' + urlParameters;\n        //showLoading();\n        $.ajax({\n            url,\n            type: 'POST',\n            beforeSend: function () {\n                (0,_Utils_js__WEBPACK_IMPORTED_MODULE_0__.showTip)('正在拼命加载中，请稍后...');\n            },\n            success: function (result) {\n                $.get(window._server + '/preview/loadPagePaper' + urlParameters, function (paper) {\n                    (0,_Utils_js__WEBPACK_IMPORTED_MODULE_0__.hideLoading)();\n                    const html = result.html;\n                    const watermark = result.watermark; //水印\n                    const _echarts = result.echarts;\n                    const iFrame = window.frames['_print_frame'];\n                    let styles = `<style type=\"text/css\">`;\n                    styles += buildPrintStyle(paper);\n                    styles += $('#_ureport_table_style').html();\n                    styles += `</style>`;\n                    $(iFrame.document.body).html(styles + html);\n\n                    if (watermark && watermark.length > 0) {\n                        iFrame.window.onload = function () {\n                            _watermark(iFrame, { 'watermark_txt': watermark });\n                        };\n                        iFrame.window.onload();\n                    }\n                    if (_echarts && _echarts.length > 0) {\n                        __loadScript(iFrame.document, window.basePath + '/static/plugins/echarts/echarts.min.js', function () {\n                            console.log(_echarts);\n                            const es = eval(\"(\" + _echarts + \")\");\n                            console.log(es);\n                            __printInitECharts(iFrame.document, es, 0, function () {\n                                (0,_Utils_js__WEBPACK_IMPORTED_MODULE_0__.hideTip)();\n                                iFrame.window.focus();\n                                iFrame.window.print();\n                            });\n                            //window.open(iFrame.window);\n                        });\n                    } else {\n                        (0,_Utils_js__WEBPACK_IMPORTED_MODULE_0__.hideTip)();\n                        iFrame.window.focus();\n                        iFrame.window.print();\n                    }\n                });\n            },\n            error: function (response) {\n                (0,_Utils_js__WEBPACK_IMPORTED_MODULE_0__.hideLoading)();\n                if (response && response.responseText) {\n                    (0,_MsgBox_js__WEBPACK_IMPORTED_MODULE_1__.alert)(\"服务端错误：\" + response.responseText + \"\");\n                } else {\n                    (0,_MsgBox_js__WEBPACK_IMPORTED_MODULE_1__.alert)(\"服务端出错！\");\n                }\n            }\n        });\n    });\n\n    //打印所有\n    $('.ureport-printAll').click(function () {\n        var pg = $('.ureport-printAll').data('pg');\n        if (pg > 30) {\n            (0,_MsgBox_js__WEBPACK_IMPORTED_MODULE_1__.confirm)(`当前总页数过大,一共[<span style=\"font-weight: bold;font-size: 14pt;color: #f44336;\">` + pg + `</span>]页,请确认是否打印？数据加载有点慢请耐心等待...`, function () {\n                let urlParameters = buildLocationSearchParameters();\n                urlParameters += \"&__a=1\";\n                const url = window._server + '/preview/loadPrintPages' + urlParameters;\n                (0,_Utils_js__WEBPACK_IMPORTED_MODULE_0__.showLoading)();\n                $.ajax({\n                    url,\n                    type: 'POST',\n                    success: function (result) {\n                        $.get(window._server + '/preview/loadPagePaper' + urlParameters, function (paper) {\n                            (0,_Utils_js__WEBPACK_IMPORTED_MODULE_0__.hideLoading)();\n                            const html = result.html;\n                            const watermark = result.watermark; //水印\n                            const iFrame = window.frames['_print_frame'];\n                            let styles = `<style type=\"text/css\">`;\n                            styles += buildPrintStyle(paper);\n                            styles += $('#_ureport_table_style').html();\n                            styles += `</style>`;\n                            $(iFrame.document.body).html(styles + html);\n                            if (watermark && watermark.length > 0) {\n                                iFrame.window.onload = function () {\n                                    _watermark(iFrame, { 'watermark_txt': watermark });\n                                };\n                                iFrame.window.onload();\n                            }\n                            iFrame.window.focus();\n                            iFrame.window.print();\n                        });\n                    },\n                    error: function (response) {\n                        (0,_Utils_js__WEBPACK_IMPORTED_MODULE_0__.hideLoading)();\n                        if (response && response.responseText) {\n                            (0,_MsgBox_js__WEBPACK_IMPORTED_MODULE_1__.alert)(\"服务端错误：\" + response.responseText + \"\");\n                        } else {\n                            (0,_MsgBox_js__WEBPACK_IMPORTED_MODULE_1__.alert)(\"服务端出错！\");\n                        }\n                    }\n                });\n            });\n        } else {\n            let urlParameters = buildLocationSearchParameters();\n            urlParameters += \"&__a=1\";\n            const url = window._server + '/preview/loadPrintPages' + urlParameters;\n            (0,_Utils_js__WEBPACK_IMPORTED_MODULE_0__.showLoading)();\n            $.ajax({\n                url,\n                type: 'POST',\n                success: function (result) {\n                    $.get(window._server + '/preview/loadPagePaper' + urlParameters, function (paper) {\n                        (0,_Utils_js__WEBPACK_IMPORTED_MODULE_0__.hideLoading)();\n                        const html = result.html;\n                        const watermark = result.watermark; //水印\n                        const iFrame = window.frames['_print_frame'];\n                        let styles = `<style type=\"text/css\">`;\n                        styles += buildPrintStyle(paper);\n                        styles += $('#_ureport_table_style').html();\n                        styles += `</style>`;\n                        $(iFrame.document.body).html(styles + html);\n                        if (watermark && watermark.length > 0) {\n                            iFrame.window.onload = function () {\n                                _watermark(iFrame, { 'watermark_txt': watermark });\n                            };\n                            iFrame.window.onload();\n                        }\n                        iFrame.window.focus();\n                        iFrame.window.print();\n                    });\n                },\n                error: function (response) {\n                    (0,_Utils_js__WEBPACK_IMPORTED_MODULE_0__.hideLoading)();\n                    if (response && response.responseText) {\n                        (0,_MsgBox_js__WEBPACK_IMPORTED_MODULE_1__.alert)(\"服务端错误：\" + response.responseText + \"\");\n                    } else {\n                        (0,_MsgBox_js__WEBPACK_IMPORTED_MODULE_1__.alert)(\"服务端出错！\");\n                    }\n                }\n            });\n        }\n    });\n\n    let directPrintPdf = false,\n        index = 0;\n    const pdfPrintDialog = new _dialog_PDFPrintDialog_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"]();\n    $(`.ureport-pdf-print`).click(function () {\n        const urlParameters = buildLocationSearchParameters();\n        $.get(window._server + '/preview/loadPagePaper' + urlParameters, function (paper) {\n            pdfPrintDialog.show(paper);\n        });\n    });\n    $(`.ureport-pdf-direct-print`).click(function () {\n        (0,_Utils_js__WEBPACK_IMPORTED_MODULE_0__.showLoading)();\n        const urlParameters = buildLocationSearchParameters();\n        const url = window._server + '/pdf/show' + urlParameters + `&_i=${index++}`;\n        const iframe = window.frames['_print_pdf_frame'];\n        if (!directPrintPdf) {\n            directPrintPdf = true;\n            $(\"iframe[name='_print_pdf_frame']\").on(\"load\", function () {\n                (0,_Utils_js__WEBPACK_IMPORTED_MODULE_0__.hideLoading)();\n                iframe.window.focus();\n                iframe.window.print();\n            });\n        }\n        iframe.window.focus();\n        iframe.location.href = url;\n    });\n    $(`.ureport-export-pdf`).click(function () {\n        const urlParameters = buildLocationSearchParameters();\n        const url = window._server + '/pdf' + urlParameters;\n        window.open(url, '_blank');\n    });\n    $(`.ureport-export-word`).click(function () {\n        const urlParameters = buildLocationSearchParameters();\n        const url = window._server + '/word' + urlParameters;\n        window.open(url, '_blank');\n    });\n    $(`.ureport-export-excel`).click(function () {\n        const urlParameters = buildLocationSearchParameters();\n        const url = window._server + '/excel' + urlParameters;\n        window.open(url, '_blank');\n    });\n    $(`.ureport-export-excel-paging`).click(function () {\n        const urlParameters = buildLocationSearchParameters();\n        const url = window._server + '/excel/paging' + urlParameters;\n        window.open(url, '_blank');\n    });\n    $(`.ureport-export-excel-paging-sheet`).click(function () {\n        const urlParameters = buildLocationSearchParameters();\n        const url = window._server + '/excel/sheet' + urlParameters;\n        window.open(url, '_blank');\n    });\n});\n\nwindow._currentPageIndex = null;\nwindow._totalPage = null;\n\n/**\n * 添加水印\n * @param {*} settings \n */\nwindow._watermark = function (_self, settings) {\n    //默认设置\n    var defaultSettings = {\n        watermark_txt: \"演示样例\",\n        watermark_x: 20, //水印起始位置x轴坐标\n        watermark_y: 20, //水印起始位置Y轴坐标\n        watermark_rows: 100, //水印行数\n        watermark_cols: 20, //水印列数\n        watermark_x_space: 10, //水印x轴间隔\n        watermark_y_space: 10, //水印y轴间隔\n        watermark_color: '#aaa', //水印字体颜色\n        watermark_alpha: 0.8, //水印透明度\n        watermark_fontsize: '15px', //水印字体大小\n        watermark_font: '微软雅黑', //水印字体\n        watermark_width: 150, //水印宽度\n        watermark_height: 80, //水印长度\n        watermark_angle: 15 //水印倾斜度数\n    };\n    //采用配置项替换默认值，作用类似jquery.extend\n    if (arguments.length === 2 && typeof arguments[1] === \"object\") {\n        var src = arguments[1] || {};\n        for (let key in src) {\n            if (src[key] && defaultSettings[key] && src[key] === defaultSettings[key]) continue;else if (src[key]) defaultSettings[key] = src[key];\n        }\n    }\n\n    let oTemp = _self.document.createDocumentFragment();\n\n    //获取页面最大宽度\n    let page_width = Math.max(_self.document.body.scrollWidth, _self.document.body.clientWidth);\n    let cutWidth = page_width * 0.0150;\n    page_width = page_width - cutWidth;\n    //获取页面最大高度\n    let page_height = Math.max(_self.document.body.scrollHeight - 80, _self.document.body.clientHeight - 40);\n    // var page_height = document.body.scrollHeight+document.body.scrollTop;\n    //如果将水印列数设置为0，或水印列数设置过大，超过页面最大宽度，则重新计算水印列数和水印x轴间隔\n    if (defaultSettings.watermark_cols == 0 || parseInt(defaultSettings.watermark_x + defaultSettings.watermark_width * defaultSettings.watermark_cols + defaultSettings.watermark_x_space * (defaultSettings.watermark_cols - 1)) > page_width) {\n        defaultSettings.watermark_cols = parseInt((page_width - defaultSettings.watermark_x + defaultSettings.watermark_x_space) / (defaultSettings.watermark_width + defaultSettings.watermark_x_space));\n        defaultSettings.watermark_x_space = parseInt((page_width - defaultSettings.watermark_x - defaultSettings.watermark_width * defaultSettings.watermark_cols) / (defaultSettings.watermark_cols - 1));\n    }\n    //如果将水印行数设置为0，或水印行数设置过大，超过页面最大长度，则重新计算水印行数和水印y轴间隔\n    if (defaultSettings.watermark_rows == 0 || parseInt(defaultSettings.watermark_y + defaultSettings.watermark_height * defaultSettings.watermark_rows + defaultSettings.watermark_y_space * (defaultSettings.watermark_rows - 1)) > page_height) {\n        defaultSettings.watermark_rows = parseInt((defaultSettings.watermark_y_space + page_height - defaultSettings.watermark_y) / (defaultSettings.watermark_height + defaultSettings.watermark_y_space));\n        defaultSettings.watermark_y_space = parseInt((page_height - defaultSettings.watermark_y - defaultSettings.watermark_height * defaultSettings.watermark_rows) / (defaultSettings.watermark_rows - 1));\n    }\n    let x;\n    let y;\n    for (let i = 0; i < defaultSettings.watermark_rows; i++) {\n        y = defaultSettings.watermark_y + (defaultSettings.watermark_y_space + defaultSettings.watermark_height) * i;\n        for (let j = 0; j < defaultSettings.watermark_cols; j++) {\n            x = defaultSettings.watermark_x + (defaultSettings.watermark_width + defaultSettings.watermark_x_space) * j;\n            var mask_div = _self.document.createElement('div');\n            mask_div.id = 'mask_div' + i + j;\n            mask_div.className = 'mask_div';\n            mask_div.appendChild(_self.document.createTextNode(defaultSettings.watermark_txt));\n            //设置水印div倾斜显示\n            mask_div.style.webkitTransform = \"rotate(-\" + defaultSettings.watermark_angle + \"deg)\";\n            mask_div.style.MozTransform = \"rotate(-\" + defaultSettings.watermark_angle + \"deg)\";\n            mask_div.style.msTransform = \"rotate(-\" + defaultSettings.watermark_angle + \"deg)\";\n            mask_div.style.OTransform = \"rotate(-\" + defaultSettings.watermark_angle + \"deg)\";\n            mask_div.style.transform = \"rotate(-\" + defaultSettings.watermark_angle + \"deg)\";\n            mask_div.style.visibility = \"\";\n            mask_div.style.position = \"fixed\";\n            mask_div.style.left = x + 'px';\n            mask_div.style.top = y + 'px';\n            mask_div.style.overflow = \"hidden\";\n            mask_div.style.zIndex = \"19920219\";\n            mask_div.style.pointerEvents = 'none'; //pointer-events:none  让水印不遮挡页面的点击事件\n            //mask_div.style.border=\"solid #eee 1px\";\n            mask_div.style.opacity = defaultSettings.watermark_alpha;\n            mask_div.style.fontSize = defaultSettings.watermark_fontsize;\n            mask_div.style.fontFamily = defaultSettings.watermark_font;\n            mask_div.style.color = defaultSettings.watermark_color;\n            mask_div.style.textAlign = \"center\";\n            mask_div.style.width = defaultSettings.watermark_width + 'px';\n            mask_div.style.height = defaultSettings.watermark_height + 'px';\n            mask_div.style.display = \"block\";\n            //交叉网格显示\n            if (i % 2 == 0 && j % 2 == 0) {\n                oTemp.appendChild(mask_div);\n            }\n            if (i % 2 == 1 && j % 2 == 1) {\n                oTemp.appendChild(mask_div);\n            }\n        };\n    };\n    _self.document.body.appendChild(oTemp);\n};\n\nfunction buildPrintStyle(paper) {\n    const marginLeft = (0,_Utils_js__WEBPACK_IMPORTED_MODULE_0__.pointToMM)(paper.leftMargin);\n    const marginTop = (0,_Utils_js__WEBPACK_IMPORTED_MODULE_0__.pointToMM)(paper.topMargin);\n    const marginRight = (0,_Utils_js__WEBPACK_IMPORTED_MODULE_0__.pointToMM)(paper.rightMargin);\n    const marginBottom = (0,_Utils_js__WEBPACK_IMPORTED_MODULE_0__.pointToMM)(paper.bottomMargin);\n    const paperType = paper.paperType;\n    let page = paperType;\n    if (paperType === 'CUSTOM') {\n        page = (0,_Utils_js__WEBPACK_IMPORTED_MODULE_0__.pointToMM)(paper.width) + 'mm ' + (0,_Utils_js__WEBPACK_IMPORTED_MODULE_0__.pointToMM)(paper.height) + 'mm';\n    }\n    const style = `\n        @media print {\n            .page-break{\n                display: block;\n                page-break-before: always;\n            }\n        }\n        @page {\n          size: ${page} ${paper.orientation};\n          margin-left: ${marginLeft}mm;\n          margin-top: ${marginTop}mm;\n          margin-right:${marginRight}mm;\n          margin-bottom:${marginBottom}mm;\n        }\n    `;\n    return style;\n};\n\nwindow.__loadScript = function (_dom, url, callback) {\n    const _script = _dom.createElement('script');\n    _script.type = 'text/javascript';\n    // 处理IE\n    if (_script.readyState) {\n        _script.onreadystatechange = function () {\n            if (_script.readyState === 'loaded' || _script.readyState === 'complete') {\n                _script.onreadystatechange = null;\n                callback();\n            }\n        };\n    } else {\n        // 处理其他浏览器的情况\n        _script.onload = function () {\n            callback();\n        };\n    }\n    _script.src = url;\n    _dom.body.append(_script);\n};\n\nwindow.buildPaging = function (pageIndex, totalPage) {\n    if (totalPage === 0) {\n        return;\n    }\n    if (!pageIndex) {\n        return;\n    }\n    if (!window._currentPageIndex) {\n        window._currentPageIndex = pageIndex;\n    }\n    pageIndex = window._currentPageIndex;\n    if (!window._totalPage) {\n        window._totalPage = totalPage;\n    }\n\n    const pageSelector = $('#pageSelector');\n    pageSelector.change(function () {\n        const parameters = window.buildLocationSearchParameters('_i');\n        let url = window._server + `/preview${parameters}&_i=${$(this).val()}`;\n        window.open(url, '_self');\n    });\n    pageSelector.val(pageIndex);\n    if (totalPage === 1) {\n        return;\n    }\n    const parameters = window.buildLocationSearchParameters('_i');\n    const pagingContainer = $('#pageLinkContainer');\n    pagingContainer.empty();\n    if (pageIndex > 1) {\n        let url = window._server + `/preview${parameters}&_i=${pageIndex - 1}`;\n        const prevPage = $(`<button type=\"button\" class=\"btn btn-link btn-sm\">上一页</button>`);\n        pagingContainer.append(prevPage);\n        prevPage.click(function () {\n            window.open(url, '_self');\n        });\n    }\n    if (pageIndex < totalPage) {\n        let url = window._server + `/preview${parameters}&_i=${pageIndex + 1}`;\n        const nextPage = $(`<button type=\"button\" class=\"btn btn-link btn-sm\">下一页</button>`);\n        pagingContainer.append(nextPage);\n        nextPage.click(function () {\n            window.open(url, '_self');\n        });\n    }\n};\n\nwindow._intervalRefresh = function (value, totalPage) {\n    if (!value) {\n        return;\n    }\n    window._totalPage = totalPage;\n    const second = value * 1000;\n    setTimeout(function () {\n        _refreshData(second);\n    }, second);\n};\n\nfunction _refreshData(second) {\n    const params = buildLocationSearchParameters('_i');\n    let url = window._server + `/preview/loadData${params}`;\n    const totalPage = window._totalPage;\n    if (totalPage > 0) {\n        if (window._currentPageIndex) {\n            if (window._currentPageIndex > totalPage) {\n                window._currentPageIndex = 1;\n            }\n            url += \"&_i=\" + window._currentPageIndex + \"\";\n        }\n        $(\"#pageSelector\").val(window._currentPageIndex);\n    }\n    $.ajax({\n        url,\n        type: 'GET',\n        success: function (report) {\n            const tableContainer = $(`#_ureport_table`);\n            tableContainer.empty();\n            window._totalPage = report.totalPageWithCol;\n            tableContainer.append(report.content);\n            _buildChartDatas(report.chartDatas);\n            buildPaging(window._currentPageIndex, window._totalPage);\n            if (window._currentPageIndex) {\n                window._currentPageIndex++;\n            }\n            setTimeout(function () {\n                _refreshData(second);\n            }, second);\n        },\n        error: function (response) {\n            const tableContainer = $(`#_ureport_table`);\n            tableContainer.empty();\n            if (response && response.responseText) {\n                tableContainer.append(\"<h3 style='color: #d30e00;'>服务端错误：\" + response.responseText + \"</h3>\");\n            } else {\n                tableContainer.append(\"<h3 style='color: #d30e00;'>加载数据失败</h3>\");\n            }\n            setTimeout(function () {\n                _refreshData(second);\n            }, second);\n        }\n    });\n};\n\nwindow._buildChartDatas = function (chartData) {\n    if (!chartData) {\n        return;\n    }\n    for (let d of chartData) {\n        let json = d.json;\n        json = JSON.parse(json, function (k, v) {\n            if (v.indexOf && v.indexOf('function') > -1) {\n                return eval(\"(function(){return \" + v + \" })()\");\n            }\n            return v;\n        });\n        _buildChart(d.id, json);\n    }\n};\n\n//echarts\nwindow._buildEchartDatas = function (chartData) {\n    if (!chartData) {\n        return;\n    }\n    for (let d of chartData) {\n        let json = d.json;\n        // json=JSON.parse(json,function (k, v) {\n        //     if(v.indexOf && v.indexOf('function') > -1){\n        //         return eval(\"(function(){return \"+v+\" })()\")\n        //     }\n        //     return v;\n        // });\n        console.log(json);\n        json = eval(\"(\" + json + \")\");\n        ___buildECharts(document, d.id, json);\n    }\n};\n\nwindow.__printInitECharts = function (dom, es, i, fun) {\n    if (i >= es.length) {\n        window.setTimeout(function () {\n            fun();\n        }, 500);\n        return;\n    }\n    let json = eval(\"(\" + es[i].json + \")\");\n    let id = es[i].id;\n    ___buildECharts(dom, id, json, function () {\n        i++;\n        if (i < es.length) {\n            __printInitECharts(dom, es, i, fun);\n        } else {\n            window.setTimeout(function () {\n                fun();\n            }, 500);\n            return;\n        }\n    });\n};\n\nwindow.___buildECharts = function (dom, anvasId, chartJson, flag) {\n    const ctx = dom.getElementById(anvasId);\n    const _echart_ = window.echarts.init(ctx);\n\n    if (chartJson.type == 'sql') {\n        _echart_.setOption(chartJson.data);\n        if (typeof flag === 'function') {\n            // window.setTimeout(function(){\n            //     let echartsimg = _echart_.getDataURL();//width: 797px; height: 456px;\n            //     let  img = '<img src=\"'+echartsimg+'\" style=\"width:'+ctx.clientWidth+'px; height:'+ctx.clientHeight+'px\"/>';\n            //     ctx.innerHTML = img;\n            //     flag();\n            // },500);\n            _echart_.on('finished', function () {\n                let echartsimg = _echart_.getDataURL(); //width: 797px; height: 456px;\n                let img = '<img src=\"' + echartsimg + '\" style=\"width:' + ctx.clientWidth + 'px; height:' + ctx.clientHeight + 'px\"/>';\n                ctx.innerHTML = img;\n                flag();\n            });\n        }\n    } else if (chartJson.type == 'api') {\n        //请求API接口数据\n        let url = chartJson.apiUrl;\n        if (url.indexOf('http') < 0) {\n            url = window.baseURL + url;\n        }\n        let config = {\n            url: url,\n            type: \"POST\",\n            dataType: \"json\",\n            success: function (result) {\n                if (result.code == 0) {\n                    //登录成功\n                    if ('line_stack' == chartJson.chartType || 'Bar_Label_Rotation' == chartJson.chartType || 'bar_stack' == chartJson.chartType || 'line_step' == chartJson.chartType) {\n                        const _data = result.data;\n                        let xAxisData = [];\n                        let legendData = [];\n                        let series = [];\n                        _data.forEach(function (val) {\n                            xAxisData.push(val.name);\n                            legendData.push(val.type);\n                        });\n                        xAxisData = Array.from(new Set(xAxisData));\n                        legendData = Array.from(new Set(legendData));\n                        legendData.forEach(function (val) {\n                            //深度拷贝\n                            let series0 = JSON.parse(JSON.stringify(chartJson.data.series[0]));\n                            series0.name = val;\n                            series0.data = [];\n                            series0.emphasis = {\n                                focus: 'series'\n                            };\n                            xAxisData.forEach(function (v) {\n                                for (let va of _data) {\n                                    if (va.name == v && va.type == val) {\n                                        series0.data.push(va.value);\n                                        break;\n                                    }\n                                }\n                            });\n                            series.push(series0);\n                        });\n                        chartJson.data.series = series;\n                        if ('bar_stack' == chartJson.chartType) {\n                            chartJson.data.yAxis.data = xAxisData;\n                        } else {\n                            chartJson.data.xAxis.data = xAxisData;\n                        }\n                        // chartJson.data.xAxis.data = xAxisData;\n                        chartJson.data.legend = chartJson.data.legend || {};\n                        chartJson.data.legend.data = legendData;\n                        console.log(chartJson.data);\n                        _echart_.setOption(chartJson.data);\n                    }\n                    // else if(chartJson.chartType == 'Bar_Label_Rotation' ||\n                    // 'bar_stack' == chartJson.chartType){\n                    //     const _data = result.data;\n                    //     let  xAxisData = [];\n                    //     let legendData = [];\n                    //     let series = [];\n                    //     _data.forEach(function(val){\n                    //         xAxisData.push(val.name);\n                    //         legendData.push(val.type);\n                    //     })\n                    //     xAxisData = Array.from(new Set(xAxisData));\n                    //     legendData = Array.from(new Set(legendData));\n                    //     legendData.forEach(function(val){\n                    //         let series0 = {};\n                    //         if('line_stack' == chartJson.chartType){\n                    //             series0.type = 'line';\n                    //         }else{\n                    //             series0.type = 'bar';\n                    //         }\n                    //         series0.name = val;\n                    //         series0.data = [];\n                    //         series0.emphasis = {\n                    //             focus: 'series'\n                    //         };\n                    //         if('Bar_Label_Rotation' != chartJson.chartType){\n                    //             series0.stack = 'total';\n                    //         }\n                    //         xAxisData.forEach(function(v){\n                    //             for(let va of _data){\n                    //                 if(va.name == v && va.type == val){\n                    //                     series0.data.push(va.value);\n                    //                     break;\n                    //                 }\n                    //             }\n                    //         });\n                    //         series.push(series0);\n                    //     })\n                    //     chartJson.data.series = series;\n                    //     if('bar_stack' == chartJson.chartType){\n                    //         chartJson.data.yAxis.data = xAxisData;\n                    //     }else{\n                    //         chartJson.data.xAxis.data = xAxisData;\n                    //     }\n                    //     chartJson.data.legend =  chartJson.data.legend || {};\n                    //     chartJson.data.legend.data = legendData;\n                    //     _echart_.setOption(chartJson.data);\n                    //}\n                    else if ('bar_Background' == chartJson.chartType || 'line_basic' == chartJson.chartType || 'line_area' == chartJson.chartType) {\n                            const _data = result.data;\n                            let xAxisData = [];\n                            let seriesData = [];\n                            _data.forEach(function (val) {\n                                xAxisData.push(val.name);\n                                seriesData.push(val.value);\n                            });\n                            chartJson.data.series[0].data = seriesData;\n                            chartJson.data.xAxis.data = xAxisData;\n                            _echart_.setOption(chartJson.data);\n                        } else if (chartJson.chartType == 'pie_simple' || chartJson.chartType == 'pie_doughnut' || 'pie_roseType' == chartJson.chartType) {\n                            const _data = result.data;\n                            chartJson.data.series[0].data = _data;\n                            _echart_.setOption(chartJson.data);\n                        }\n                    if (typeof flag === 'function') {\n                        _echart_.on('finished', function () {\n                            let echartsimg = _echart_.getDataURL(); //width: 797px; height: 456px;\n                            let img = '<img src=\"' + echartsimg + '\" style=\"width:' + ctx.clientWidth + 'px; height:' + ctx.clientHeight + 'px\"/>';\n                            ctx.innerHTML = img;\n                            flag();\n                        });\n                    }\n                }\n            }\n        };\n        $.ajax(config);\n    }\n};\n\nwindow._buildChart = function (canvasId, chartJson) {\n    const ctx = document.getElementById(canvasId);\n    if (!ctx) {\n        return;\n    }\n    let options = chartJson.options;\n    if (!options) {\n        options = {};\n        chartJson.options = options;\n    }\n    let animation = options.animation;\n    if (!animation) {\n        animation = {};\n        options.animation = animation;\n    }\n    animation.onComplete = function (event) {\n        const chart = event.chart;\n        const base64Image = chart.toBase64Image();\n        const urlParameters = window.location.search;\n        const url = window._server + '/chart/storeData' + urlParameters;\n        const canvas = $(\"#\" + canvasId);\n        const width = parseInt(canvas.css('width'));\n        const height = parseInt(canvas.css('height'));\n        $.ajax({\n            type: 'POST',\n            data: { _base64Data: base64Image, _chartId: canvasId, _width: width, _height: height },\n            url\n        });\n    };\n    const chart = new Chart(ctx, chartJson);\n};\n\nwindow.__clearLockhost = function () {\n    if (window.localStorage) {\n        for (var key in localStorage) {\n            if (key.substring(0, 4) == '__JU') {\n                window.localStorage.removeItem(key);\n            }\n        }\n    }\n};\n\nwindow.buildLocationSearchParameters = function (exclude) {\n    let urlParameters = window.location.search;\n    if (urlParameters.length > 0) {\n        urlParameters = urlParameters.substring(1, urlParameters.length);\n    }\n    let parameters = {};\n    const pairs = urlParameters.split('&');\n    for (let i = 0; i < pairs.length; i++) {\n        const item = pairs[i];\n        if (item === '') {\n            continue;\n        }\n        const param = item.split('=');\n        let key = param[0];\n        if (exclude && key === exclude) {\n            continue;\n        }\n        let value = param[1];\n        parameters[key] = value;\n    }\n    if (window.searchFormParameters) {\n        for (let key in window.searchFormParameters) {\n            if (key === exclude) {\n                continue;\n            }\n            const value = window.searchFormParameters[key];\n            if (value) {\n                parameters[key] = value;\n            }\n        }\n    }\n    let p = '?';\n    for (let key in parameters) {\n        if (p === '?') {\n            p += key + '=' + parameters[key];\n        } else {\n            p += '&' + key + '=' + parameters[key];\n        }\n    }\n    return p;\n};\n\nwindow.submitSearchForm = function (file, customParameters) {\n    window.searchFormParameters = {};\n\n    //获取\n    for (let fun of window.formElements) {\n        const json = fun.call(this);\n        for (let key in json) {\n            let value = json[key];\n            value = encodeURI(value);\n            value = encodeURI(value);\n            window.searchFormParameters[key] = value;\n        }\n    }\n\n    const parameters = window.buildLocationSearchParameters('_i');\n    let url = window._server + \"/preview/loadData\" + parameters;\n    const pageSelector = $(`#pageSelector`);\n    if (pageSelector.length > 0) {\n        url += '&_i=1';\n    }\n    $.ajax({\n        url,\n        type: 'POST',\n        beforeSend: function () {\n            (0,_Utils_js__WEBPACK_IMPORTED_MODULE_0__.showTip)('数据处理中，请稍后...');\n        },\n        success: function (report) {\n            (0,_Utils_js__WEBPACK_IMPORTED_MODULE_0__.hideTip)();\n            window._currentPageIndex = 1;\n            const tableContainer = $(`#_ureport_table`);\n            tableContainer.empty();\n            tableContainer.append(report.content);\n            _buildChartDatas(report.chartDatas);\n            _buildEchartDatas(report.echartDatas);\n            const totalPage = report.totalPage;\n            window._totalPage = totalPage;\n            if (pageSelector.length > 0) {\n                pageSelector.empty();\n                for (let i = 1; i <= totalPage; i++) {\n                    pageSelector.append(`<option>${i}</option>`);\n                }\n                const pageIndex = report.pageIndex || 1;\n                pageSelector.val(pageIndex);\n                $('#totalPageLabel').html(totalPage);\n                buildPaging(pageIndex, totalPage);\n            }\n        },\n        error: function (response) {\n            (0,_Utils_js__WEBPACK_IMPORTED_MODULE_0__.hideTip)();\n            if (response && response.responseText) {\n                (0,_MsgBox_js__WEBPACK_IMPORTED_MODULE_1__.alert)(\"服务端错误：\" + response.responseText + \"\");\n            } else {\n                (0,_MsgBox_js__WEBPACK_IMPORTED_MODULE_1__.alert)('查询操作失败！');\n            }\n        }\n    });\n};\n\n//# sourceURL=webpack://ureport2-js/./src/preview.js?");

/***/ }),

/***/ "./node_modules/undo-manager/lib/undomanager.js":
/*!******************************************************!*\
  !*** ./node_modules/undo-manager/lib/undomanager.js ***!
  \******************************************************/
/***/ ((module, exports, __webpack_require__) => {

eval("var __WEBPACK_AMD_DEFINE_RESULT__;/*\nSimple Javascript undo and redo.\nhttps://github.com/ArthurClemens/Javascript-Undo-Manager\n*/\n\n;(function() {\n\n\t'use strict';\n\n    function removeFromTo(array, from, to) {\n        array.splice(from,\n            !to ||\n            1 + to - from + (!(to < 0 ^ from >= 0) && (to < 0 || -1) * array.length));\n        return array.length;\n    }\n\n    var UndoManager = function() {\n\n        var commands = [],\n            index = -1,\n            limit = 0,\n            isExecuting = false,\n            callback,\n            \n            // functions\n            execute;\n\n        execute = function(command, action) {\n            if (!command || typeof command[action] !== \"function\") {\n                return this;\n            }\n            isExecuting = true;\n\n            command[action]();\n\n            isExecuting = false;\n            return this;\n        };\n\n        return {\n\n            /*\n            Add a command to the queue.\n            */\n            add: function (command) {\n                if (isExecuting) {\n                    return this;\n                }\n                // if we are here after having called undo,\n                // invalidate items higher on the stack\n                commands.splice(index + 1, commands.length - index);\n\n                commands.push(command);\n                \n                // if limit is set, remove items from the start\n                if (limit && commands.length > limit) {\n                    removeFromTo(commands, 0, -(limit+1));\n                }\n                \n                // set the current index to the end\n                index = commands.length - 1;\n                if (callback) {\n                    callback();\n                }\n                return this;\n            },\n\n            /*\n            Pass a function to be called on undo and redo actions.\n            */\n            setCallback: function (callbackFunc) {\n                callback = callbackFunc;\n            },\n\n            /*\n            Perform undo: call the undo function at the current index and decrease the index by 1.\n            */\n            undo: function () {\n                var command = commands[index];\n                if (!command) {\n                    return this;\n                }\n                execute(command, \"undo\");\n                index -= 1;\n                if (callback) {\n                    callback();\n                }\n                return this;\n            },\n\n            /*\n            Perform redo: call the redo function at the next index and increase the index by 1.\n            */\n            redo: function () {\n                var command = commands[index + 1];\n                if (!command) {\n                    return this;\n                }\n                execute(command, \"redo\");\n                index += 1;\n                if (callback) {\n                    callback();\n                }\n                return this;\n            },\n\n            /*\n            Clears the memory, losing all stored states. Reset the index.\n            */\n            clear: function () {\n                var prev_size = commands.length;\n\n                commands = [];\n                index = -1;\n\n                if (callback && (prev_size > 0)) {\n                    callback();\n                }\n            },\n\n            hasUndo: function () {\n                return index !== -1;\n            },\n\n            hasRedo: function () {\n                return index < (commands.length - 1);\n            },\n\n            getCommands: function () {\n                return commands;\n            },\n\n            getIndex: function() {\n                return index;\n            },\n            \n            setLimit: function (l) {\n                limit = l;\n            }\n        };\n    };\n\n\tif (true) {\n\t\t// AMD. Register as an anonymous module.\n\t\t!(__WEBPACK_AMD_DEFINE_RESULT__ = (function() {\n\t\t\treturn UndoManager;\n\t\t}).call(exports, __webpack_require__, exports, module),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t} else {}\n\n}());\n\n\n//# sourceURL=webpack://ureport2-js/./node_modules/undo-manager/lib/undomanager.js?");

/***/ }),

/***/ "./src/i18n/preview.json":
/*!*******************************!*\
  !*** ./src/i18n/preview.json ***!
  \*******************************/
/***/ ((module) => {

"use strict";
eval("module.exports = JSON.parse('{\"pdfPrint\":{\"title\":\"PDF在线打印\",\"setup\":\"打印配置\",\"paper\":\"纸张:\",\"custom\":\"自定义\",\"width\":\"宽(毫米):\",\"numberTip\":\"请输入数字！\",\"height\":\"高(毫米):\",\"orientation\":\"方向:\",\"portrait\":\"纵向\",\"landscape\":\"横向\",\"leftMargin\":\"左边距(毫米):\",\"rightMargin\":\"右边距(毫米):\",\"topMargin\":\"上边距(毫米):\",\"bottomMargin\":\"下边距(毫米):\",\"apply\":\"应用\",\"fail\":\"操作失败！\",\"print\":\"打印\"}}');\n\n//# sourceURL=webpack://ureport2-js/./src/i18n/preview.json?");

/***/ }),

/***/ "./src/i18n/preview_en.json":
/*!**********************************!*\
  !*** ./src/i18n/preview_en.json ***!
  \**********************************/
/***/ ((module) => {

"use strict";
eval("module.exports = JSON.parse('{\"pdfPrint\":{\"title\":\"pdf online print\",\"setup\":\"Print Setup\",\"paper\":\"Paper:\",\"custom\":\"Custom\",\"width\":\"Width(mm):\",\"numberTip\":\"Please input a number\",\"height\":\"Height(mm):\",\"orientation\":\"Orientation:\",\"portrait\":\"Portrait\",\"landscape\":\"Landscape\",\"leftMargin\":\"Left Margin(mm):\",\"rightMargin\":\"Right Margin(mm):\",\"topMargin\":\"Top Margin(mm):\",\"bottomMargin\":\"Bottom Margin(mm):\",\"apply\":\"Apply\",\"fail\":\"Apply fail!\",\"print\":\"Print\"}}');\n\n//# sourceURL=webpack://ureport2-js/./src/i18n/preview_en.json?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/compat get default export */
/******/ 	(() => {
/******/ 		// getDefaultExport function for compatibility with non-harmony modules
/******/ 		__webpack_require__.n = (module) => {
/******/ 			var getter = module && module.__esModule ?
/******/ 				() => (module['default']) :
/******/ 				() => (module);
/******/ 			__webpack_require__.d(getter, { a: getter });
/******/ 			return getter;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./src/preview.js");
/******/ 	
/******/ })()
;